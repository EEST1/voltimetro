

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Jun 11 08:31:06 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  002004                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for Send_4Disp@Nro_Disp
    28  002004  01                 	db	1
    29                           
    30                           ;initializer for leds@i
    31  002005  01                 	db	1
    32  0000                     _ADCON1	set	4033
    33  0000                     _CMCON	set	4020
    34  0000                     _INTCONbits	set	4082
    35  0000                     _LATA	set	3977
    36  0000                     _LATAbits	set	3977
    37  0000                     _LATB	set	3978
    38  0000                     _LATC	set	3979
    39  0000                     _LATCbits	set	3979
    40  0000                     _LATD	set	3980
    41  0000                     _LATDbits	set	3980
    42  0000                     _LATE	set	3981
    43  0000                     _LATEbits	set	3981
    44  0000                     _PORTA	set	3968
    45  0000                     _PORTB	set	3969
    46  0000                     _PORTBbits	set	3969
    47  0000                     _PORTC	set	3970
    48  0000                     _PORTD	set	3971
    49  0000                     _PORTDbits	set	3971
    50  0000                     _PORTE	set	3972
    51  0000                     _T0CONbits	set	4053
    52  0000                     _TMR0H	set	4055
    53  0000                     _TMR0L	set	4054
    54  0000                     _TRISA	set	3986
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISCbits	set	3988
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISE	set	3990
    59  0000                     _TMR0IF	set	32658
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  007BC4                     __pcinit:
    65                           	opt stack 0
    66  007BC4                     start_initialization:
    67                           	opt stack 0
    68  007BC4                     __initialization:
    69                           	opt stack 0
    70                           
    71                           ; Clear objects allocated to COMRAM (10 bytes)
    72  007BC4  EE00  F022         	lfsr	0,__pbssCOMRAM
    73  007BC8  0E0A               	movlw	10
    74  007BCA                     clear_0:
    75  007BCA  6AEE               	clrf	postinc0,c
    76  007BCC  06E8               	decf	wreg,f,c
    77  007BCE  E1FD               	bnz	clear_0
    78                           
    79                           ; Initialize objects allocated to COMRAM (2 bytes)
    80                           ; load TBLPTR registers with __pidataCOMRAM
    81  007BD0  0E04               	movlw	low __pidataCOMRAM
    82  007BD2  6EF6               	movwf	tblptrl,c
    83  007BD4  0E20               	movlw	high __pidataCOMRAM
    84  007BD6  6EF7               	movwf	tblptrh,c
    85  007BD8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    86  007BDA  6EF8               	movwf	tblptru,c
    87  007BDC  0009               	tblrd		*+	;fetch initializer
    88  007BDE  CFF5 F02C          	movff	tablat,__pdataCOMRAM
    89  007BE2  0009               	tblrd		*+	;fetch initializer
    90  007BE4  CFF5 F02D          	movff	tablat,__pdataCOMRAM+1
    91  007BE8                     end_of_initialization:
    92                           	opt stack 0
    93  007BE8                     __end_of__initialization:
    94                           	opt stack 0
    95  007BE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
    96  007BEA  6EF8               	movwf	tblptru,c
    97  007BEC  0100               	movlb	0
    98  007BEE  EF39  F03F         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           tblptrh	equ	0xFF7
   101                           tblptrl	equ	0xFF6
   102                           tablat	equ	0xFF5
   103                           postinc0	equ	0xFEE
   104                           wreg	equ	0xFE8
   105                           
   106                           	psect	bssCOMRAM
   107  000022                     __pbssCOMRAM:
   108                           	opt stack 0
   109  000022                     _led_tout:
   110                           	opt stack 0
   111  000022                     	ds	2
   112  000024                     _CENT:
   113                           	opt stack 0
   114  000024                     	ds	1
   115  000025                     _DEC:
   116                           	opt stack 0
   117  000025                     	ds	1
   118  000026                     _MEMDIG:
   119                           	opt stack 0
   120  000026                     	ds	1
   121  000027                     _UMIL:
   122                           	opt stack 0
   123  000027                     	ds	1
   124  000028                     _UNI:
   125                           	opt stack 0
   126  000028                     	ds	1
   127  000029                     _bot_tout:
   128                           	opt stack 0
   129  000029                     	ds	1
   130  00002A                     _mux_tout:
   131                           	opt stack 0
   132  00002A                     	ds	1
   133  00002B                     mux_display@contdisp:
   134                           	opt stack 0
   135  00002B                     	ds	1
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	dataCOMRAM
   144  00002C                     __pdataCOMRAM:
   145                           	opt stack 0
   146  00002C                     Send_4Disp@Nro_Disp:
   147                           	opt stack 0
   148  00002C                     	ds	1
   149  00002D                     leds@i:
   150                           	opt stack 0
   151  00002D                     	ds	1
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           wreg	equ	0xFE8
   158                           
   159                           	psect	cstackCOMRAM
   160  000001                     __pcstackCOMRAM:
   161                           	opt stack 0
   162  000001                     ??_mux_display:
   163  000001                     
   164                           ; 0 bytes @ 0x0
   165  000001                     	ds	1
   166  000002                     mux_display@datoenv:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x1
   170  000002                     	ds	1
   171  000003                     ??_myISR:
   172                           
   173                           ; 0 bytes @ 0x2
   174  000003                     	ds	14
   175  000011                     Send_Disp@Dato:
   176                           	opt stack 0
   177  000011                     leds@velocidad:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x10
   181  000011                     	ds	1
   182  000012                     Send_Disp@NroDisp:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x11
   186  000012                     	ds	1
   187  000013                     ??_leds:
   188  000013                     Send_4Disp@Cent:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x12
   192  000013                     	ds	1
   193  000014                     Send_4Disp@Dec:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x13
   197  000014                     	ds	1
   198  000015                     Send_4Disp@Uni:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x14
   202  000015                     	ds	1
   203  000016                     ??_Send_4Disp:
   204                           
   205                           ; 0 bytes @ 0x15
   206  000016                     	ds	1
   207  000017                     Send_4Disp@Umil:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x16
   211  000017                     	ds	1
   212  000018                     ??_main:
   213                           
   214                           ; 0 bytes @ 0x17
   215  000018                     	ds	2
   216  00001A                     main@velocidad:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x19
   220  00001A                     	ds	2
   221  00001C                     main@faon:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x1B
   225  00001C                     	ds	1
   226  00001D                     main@faoff:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x1C
   230  00001D                     	ds	1
   231  00001E                     main@fbon:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x1D
   235  00001E                     	ds	1
   236  00001F                     main@fvel:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x1E
   240  00001F                     	ds	1
   241  000020                     main@b:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x1F
   245  000020                     	ds	1
   246  000021                     main@a:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x20
   250  000021                     	ds	1
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 30 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  velocidad       2   25[COMRAM] unsigned int 
   268 ;;  a               1   32[COMRAM] unsigned char 
   269 ;;  b               1   31[COMRAM] unsigned char 
   270 ;;  fvel            1   30[COMRAM] unsigned char 
   271 ;;  fbon            1   29[COMRAM] unsigned char 
   272 ;;  faoff           1   28[COMRAM] unsigned char 
   273 ;;  faon            1   27[COMRAM] unsigned char 
   274 ;; Return value:  Size  Location     Type
   275 ;;		None               void
   276 ;; Registers used:
   277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   283 ;;      Params:         0       0       0       0       0       0       0       0       0
   284 ;;      Locals:         8       0       0       0       0       0       0       0       0
   285 ;;      Temps:          2       0       0       0       0       0       0       0       0
   286 ;;      Totals:        10       0       0       0       0       0       0       0       0
   287 ;;Total ram usage:       10 bytes
   288 ;; Hardware stack levels required when called:    4
   289 ;; This function calls:
   290 ;;		_Send_4Disp
   291 ;;		_leds
   292 ;;		_pic_ini13
   293 ;;		_timer_ini13
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  007E72                     __ptext0:
   301                           	opt stack 0
   302  007E72                     _main:
   303                           	opt stack 27
   304                           
   305                           ;main.c: 32: unsigned char a=0,b=1;
   306                           
   307                           ;incstack = 0
   308  007E72  6E18               	movwf	??_main& (0+255),c
   309  007E74  0E00               	movlw	0
   310  007E76  6E21               	movwf	main@a,c
   311  007E78  5018               	movf	??_main& (0+255),w,c
   312  007E7A  6E18               	movwf	??_main& (0+255),c
   313  007E7C  0E01               	movlw	1
   314  007E7E  6E20               	movwf	main@b,c
   315  007E80  5018               	movf	??_main& (0+255),w,c
   316                           
   317                           ;main.c: 33: unsigned char faon=0,faoff=0;
   318  007E82  6E18               	movwf	??_main& (0+255),c
   319  007E84  0E00               	movlw	0
   320  007E86  6E1C               	movwf	main@faon,c
   321  007E88  5018               	movf	??_main& (0+255),w,c
   322  007E8A  6E18               	movwf	??_main& (0+255),c
   323  007E8C  0E00               	movlw	0
   324  007E8E  6E1D               	movwf	main@faoff,c
   325  007E90  5018               	movf	??_main& (0+255),w,c
   326                           
   327                           ;main.c: 34: unsigned char fbon=0,fvel=0;
   328  007E92  6E18               	movwf	??_main& (0+255),c
   329  007E94  0E00               	movlw	0
   330  007E96  6E1E               	movwf	main@fbon,c
   331  007E98  5018               	movf	??_main& (0+255),w,c
   332  007E9A  6E18               	movwf	??_main& (0+255),c
   333  007E9C  0E00               	movlw	0
   334  007E9E  6E1F               	movwf	main@fvel,c
   335  007EA0  5018               	movf	??_main& (0+255),w,c
   336                           
   337                           ;main.c: 35: unsigned int velocidad = 100;
   338  007EA2  0E00               	movlw	0
   339  007EA4  6E1B               	movwf	main@velocidad+1,c
   340  007EA6  0E64               	movlw	100
   341  007EA8  6E1A               	movwf	main@velocidad,c
   342                           
   343                           ;main.c: 37: pic_ini13();
   344  007EAA  ECF9  F03D         	call	_pic_ini13	;wreg free
   345                           
   346                           ;main.c: 38: timer_ini13();
   347  007EAE  ECC8  F03D         	call	_timer_ini13	;wreg free
   348                           
   349                           ;main.c: 44: INTCONbits.GIE = 1;
   350  007EB2  8EF2               	bsf	intcon,7,c	;volatile
   351                           
   352                           ;main.c: 45: (INTCONbits.GIE = 1);
   353  007EB4  8EF2               	bsf	intcon,7,c	;volatile
   354                           
   355                           ;main.c: 46: T0CONbits.TMR0ON = 1;
   356  007EB6  8ED5               	bsf	4053,7,c	;volatile
   357  007EB8                     l790:
   358                           
   359                           ;main.c: 60: Send_4Disp(a,b,3,4);
   360  007EB8  C020  F013         	movff	main@b,Send_4Disp@Cent
   361  007EBC  6E18               	movwf	??_main& (0+255),c
   362  007EBE  0E03               	movlw	3
   363  007EC0  6E14               	movwf	Send_4Disp@Dec,c
   364  007EC2  5018               	movf	??_main& (0+255),w,c
   365  007EC4  6E19               	movwf	(??_main+1)& (0+255),c
   366  007EC6  0E04               	movlw	4
   367  007EC8  6E15               	movwf	Send_4Disp@Uni,c
   368  007ECA  5019               	movf	(??_main+1)& (0+255),w,c
   369  007ECC  5021               	movf	main@a,w,c
   370  007ECE  ECEB  F03E         	call	_Send_4Disp
   371                           
   372                           ;main.c: 64: if(!PORTDbits.RD4 && a < 9 && faon ==0 && !bot_tout){
   373  007ED2  B883               	btfsc	3971,4,c	;volatile
   374  007ED4  D011               	goto	l806
   375  007ED6  0E09               	movlw	9
   376  007ED8  5C21               	subwf	main@a,w,c
   377  007EDA  B0D8               	btfsc	status,0,c
   378  007EDC  D00D               	goto	l806
   379  007EDE  661C               	tstfsz	main@faon,c
   380  007EE0  D00B               	goto	l806
   381  007EE2  6629               	tstfsz	_bot_tout,c
   382  007EE4  D009               	goto	l806
   383                           
   384                           ;main.c: 65: a++;
   385  007EE6  2A21               	incf	main@a,f,c
   386                           
   387                           ;main.c: 66: faon = 1;
   388  007EE8  6E18               	movwf	??_main& (0+255),c
   389  007EEA  0E01               	movlw	1
   390  007EEC  6E1C               	movwf	main@faon,c
   391  007EEE  5018               	movf	??_main& (0+255),w,c
   392                           
   393                           ;main.c: 67: bot_tout = 100;;
   394  007EF0  6E18               	movwf	??_main& (0+255),c
   395  007EF2  0E64               	movlw	100
   396  007EF4  6E29               	movwf	_bot_tout,c
   397  007EF6  5018               	movf	??_main& (0+255),w,c
   398  007EF8                     l806:
   399                           
   400                           ;main.c: 68: }
   401                           ;main.c: 69: if(PORTDbits.RD4 && faon == 1 && !bot_tout){
   402  007EF8  A883               	btfss	3971,4,c	;volatile
   403  007EFA  D00D               	goto	l814
   404  007EFC  041C               	decf	main@faon,w,c
   405  007EFE  A4D8               	btfss	status,2,c
   406  007F00  D00A               	goto	l814
   407  007F02  6629               	tstfsz	_bot_tout,c
   408  007F04  D008               	goto	l814
   409                           
   410                           ;main.c: 70: faon=0;
   411  007F06  6E18               	movwf	??_main& (0+255),c
   412  007F08  0E00               	movlw	0
   413  007F0A  6E1C               	movwf	main@faon,c
   414  007F0C  5018               	movf	??_main& (0+255),w,c
   415                           
   416                           ;main.c: 71: bot_tout = 100;;
   417  007F0E  6E18               	movwf	??_main& (0+255),c
   418  007F10  0E64               	movlw	100
   419  007F12  6E29               	movwf	_bot_tout,c
   420  007F14  5018               	movf	??_main& (0+255),w,c
   421  007F16                     l814:
   422                           
   423                           ;main.c: 72: }
   424                           ;main.c: 73: if(!PORTDbits.RD5 && a > 0 && faoff ==0 && !bot_tout){
   425  007F16  BA83               	btfsc	3971,5,c	;volatile
   426  007F18  D010               	goto	l828
   427  007F1A  5021               	movf	main@a,w,c
   428  007F1C  B4D8               	btfsc	status,2,c
   429  007F1E  D00D               	goto	l828
   430  007F20  661D               	tstfsz	main@faoff,c
   431  007F22  D00B               	goto	l828
   432  007F24  6629               	tstfsz	_bot_tout,c
   433  007F26  D009               	goto	l828
   434                           
   435                           ;main.c: 74: a--;
   436  007F28  0621               	decf	main@a,f,c
   437                           
   438                           ;main.c: 75: faoff = 1;
   439  007F2A  6E18               	movwf	??_main& (0+255),c
   440  007F2C  0E01               	movlw	1
   441  007F2E  6E1D               	movwf	main@faoff,c
   442  007F30  5018               	movf	??_main& (0+255),w,c
   443                           
   444                           ;main.c: 76: bot_tout = 100;;
   445  007F32  6E18               	movwf	??_main& (0+255),c
   446  007F34  0E64               	movlw	100
   447  007F36  6E29               	movwf	_bot_tout,c
   448  007F38  5018               	movf	??_main& (0+255),w,c
   449  007F3A                     l828:
   450                           
   451                           ;main.c: 77: }
   452                           ;main.c: 78: if(PORTDbits.RD5 && faoff == 1 && !bot_tout){
   453  007F3A  AA83               	btfss	3971,5,c	;volatile
   454  007F3C  D00D               	goto	l836
   455  007F3E  041D               	decf	main@faoff,w,c
   456  007F40  A4D8               	btfss	status,2,c
   457  007F42  D00A               	goto	l836
   458  007F44  6629               	tstfsz	_bot_tout,c
   459  007F46  D008               	goto	l836
   460                           
   461                           ;main.c: 79: faoff=0;
   462  007F48  6E18               	movwf	??_main& (0+255),c
   463  007F4A  0E00               	movlw	0
   464  007F4C  6E1D               	movwf	main@faoff,c
   465  007F4E  5018               	movf	??_main& (0+255),w,c
   466                           
   467                           ;main.c: 80: bot_tout = 100;;
   468  007F50  6E18               	movwf	??_main& (0+255),c
   469  007F52  0E64               	movlw	100
   470  007F54  6E29               	movwf	_bot_tout,c
   471  007F56  5018               	movf	??_main& (0+255),w,c
   472  007F58                     l836:
   473                           
   474                           ;main.c: 81: }
   475                           ;main.c: 83: if(!PORTDbits.RD6 && fbon ==0 && !bot_tout){
   476  007F58  BC83               	btfsc	3971,6,c	;volatile
   477  007F5A  D010               	goto	l848
   478  007F5C  661E               	tstfsz	main@fbon,c
   479  007F5E  D00E               	goto	l848
   480  007F60  6629               	tstfsz	_bot_tout,c
   481  007F62  D00C               	goto	l848
   482                           
   483                           ;main.c: 84: b = ~b&(0x01);
   484  007F64  5020               	movf	main@b,w,c
   485  007F66  0AFF               	xorlw	255
   486  007F68  0B01               	andlw	1
   487  007F6A  6E20               	movwf	main@b,c
   488                           
   489                           ;main.c: 85: fbon = 1;
   490  007F6C  6E18               	movwf	??_main& (0+255),c
   491  007F6E  0E01               	movlw	1
   492  007F70  6E1E               	movwf	main@fbon,c
   493  007F72  5018               	movf	??_main& (0+255),w,c
   494                           
   495                           ;main.c: 86: bot_tout = 100;;
   496  007F74  6E18               	movwf	??_main& (0+255),c
   497  007F76  0E64               	movlw	100
   498  007F78  6E29               	movwf	_bot_tout,c
   499  007F7A  5018               	movf	??_main& (0+255),w,c
   500  007F7C                     l848:
   501                           
   502                           ;main.c: 87: }
   503                           ;main.c: 88: if(PORTDbits.RD6 && fbon == 1 && !bot_tout){
   504  007F7C  AC83               	btfss	3971,6,c	;volatile
   505  007F7E  D00D               	goto	l856
   506  007F80  041E               	decf	main@fbon,w,c
   507  007F82  A4D8               	btfss	status,2,c
   508  007F84  D00A               	goto	l856
   509  007F86  6629               	tstfsz	_bot_tout,c
   510  007F88  D008               	goto	l856
   511                           
   512                           ;main.c: 90: fbon=0;
   513  007F8A  6E18               	movwf	??_main& (0+255),c
   514  007F8C  0E00               	movlw	0
   515  007F8E  6E1E               	movwf	main@fbon,c
   516  007F90  5018               	movf	??_main& (0+255),w,c
   517                           
   518                           ;main.c: 91: bot_tout = 100;;
   519  007F92  6E18               	movwf	??_main& (0+255),c
   520  007F94  0E64               	movlw	100
   521  007F96  6E29               	movwf	_bot_tout,c
   522  007F98  5018               	movf	??_main& (0+255),w,c
   523  007F9A                     l856:
   524                           
   525                           ;main.c: 92: }
   526                           ;main.c: 93: if(!PORTDbits.RD7 && fvel ==0 && !bot_tout){
   527  007F9A  BE83               	btfsc	3971,7,c	;volatile
   528  007F9C  D012               	goto	l868
   529  007F9E  661F               	tstfsz	main@fvel,c
   530  007FA0  D010               	goto	l868
   531  007FA2  6629               	tstfsz	_bot_tout,c
   532  007FA4  D00E               	goto	l868
   533                           
   534                           ;main.c: 94: velocidad = velocidad + 100;
   535  007FA6  0E64               	movlw	100
   536  007FA8  241A               	addwf	main@velocidad,w,c
   537  007FAA  6E1A               	movwf	main@velocidad,c
   538  007FAC  0E00               	movlw	0
   539  007FAE  201B               	addwfc	main@velocidad+1,w,c
   540  007FB0  6E1B               	movwf	main@velocidad+1,c
   541                           
   542                           ;main.c: 95: fvel = 1;
   543  007FB2  6E18               	movwf	??_main& (0+255),c
   544  007FB4  0E01               	movlw	1
   545  007FB6  6E1F               	movwf	main@fvel,c
   546  007FB8  5018               	movf	??_main& (0+255),w,c
   547                           
   548                           ;main.c: 96: bot_tout = 100;;
   549  007FBA  6E18               	movwf	??_main& (0+255),c
   550  007FBC  0E64               	movlw	100
   551  007FBE  6E29               	movwf	_bot_tout,c
   552  007FC0  5018               	movf	??_main& (0+255),w,c
   553  007FC2                     l868:
   554                           
   555                           ;main.c: 97: }
   556                           ;main.c: 98: if(PORTDbits.RD7 && fvel == 1 && !bot_tout){
   557  007FC2  AE83               	btfss	3971,7,c	;volatile
   558  007FC4  D00D               	goto	l876
   559  007FC6  041F               	decf	main@fvel,w,c
   560  007FC8  A4D8               	btfss	status,2,c
   561  007FCA  D00A               	goto	l876
   562  007FCC  6629               	tstfsz	_bot_tout,c
   563  007FCE  D008               	goto	l876
   564                           
   565                           ;main.c: 100: fvel=0;
   566  007FD0  6E18               	movwf	??_main& (0+255),c
   567  007FD2  0E00               	movlw	0
   568  007FD4  6E1F               	movwf	main@fvel,c
   569  007FD6  5018               	movf	??_main& (0+255),w,c
   570                           
   571                           ;main.c: 101: bot_tout = 100;;
   572  007FD8  6E18               	movwf	??_main& (0+255),c
   573  007FDA  0E64               	movlw	100
   574  007FDC  6E29               	movwf	_bot_tout,c
   575  007FDE  5018               	movf	??_main& (0+255),w,c
   576  007FE0                     l876:
   577                           
   578                           ;main.c: 102: }
   579                           ;main.c: 104: if(b == 0x01) leds(velocidad);
   580  007FE0  0420               	decf	main@b,w,c
   581  007FE2  A4D8               	btfss	status,2,c
   582  007FE4  D006               	goto	l880
   583  007FE6  C01A  F011         	movff	main@velocidad,leds@velocidad
   584  007FEA  C01B  F012         	movff	main@velocidad+1,leds@velocidad+1
   585  007FEE  EC6E  F03E         	call	_leds	;wreg free
   586  007FF2                     l880:
   587                           
   588                           ;main.c: 106: if(PORTBbits.RB4 == 0) velocidad =100;
   589  007FF2  B881               	btfsc	3969,4,c	;volatile
   590  007FF4  D761               	goto	l790
   591  007FF6  0E00               	movlw	0
   592  007FF8  6E1B               	movwf	main@velocidad+1,c
   593  007FFA  0E64               	movlw	100
   594  007FFC  6E1A               	movwf	main@velocidad,c
   595  007FFE  D75C               	goto	l790
   596  008000                     __end_of_main:
   597                           	opt stack 0
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           intcon	equ	0xFF2
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           status	equ	0xFD8
   606                           
   607 ;; *************** function _timer_ini13 *****************
   608 ;; Defined at:
   609 ;;		line 43 in file "Ap_ini.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;		None               void
   616 ;; Registers used:
   617 ;;		wreg, status,2
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:         0       0       0       0       0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    2
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text1
   638  007B90                     __ptext1:
   639                           	opt stack 0
   640  007B90                     _timer_ini13:
   641                           	opt stack 28
   642                           
   643                           ;Ap_ini.c: 44: T0CONbits.TMR0ON = 0;
   644                           
   645                           ;incstack = 0
   646  007B90  9ED5               	bcf	4053,7,c	;volatile
   647                           
   648                           ;Ap_ini.c: 45: T0CONbits.T08BIT = 1;
   649  007B92  8CD5               	bsf	4053,6,c	;volatile
   650                           
   651                           ;Ap_ini.c: 46: T0CONbits.T0CS = 0;
   652  007B94  9AD5               	bcf	4053,5,c	;volatile
   653                           
   654                           ;Ap_ini.c: 47: T0CONbits.PSA = 0;
   655  007B96  96D5               	bcf	4053,3,c	;volatile
   656                           
   657                           ;Ap_ini.c: 48: T0CONbits.T0PS0 = 1;
   658  007B98  80D5               	bsf	4053,0,c	;volatile
   659                           
   660                           ;Ap_ini.c: 49: T0CONbits.T0PS1 = 1;
   661  007B9A  82D5               	bsf	4053,1,c	;volatile
   662                           
   663                           ;Ap_ini.c: 50: T0CONbits.T0PS2 = 1;
   664  007B9C  84D5               	bsf	4053,2,c	;volatile
   665                           
   666                           ;Ap_ini.c: 51: TMR0L = 209;
   667  007B9E  0ED1               	movlw	209
   668  007BA0  6ED6               	movwf	4054,c	;volatile
   669                           
   670                           ;Ap_ini.c: 52: TMR0H = 0xFF;
   671  007BA2  68D7               	setf	4055,c	;volatile
   672                           
   673                           ;Ap_ini.c: 53: INTCONbits.TMR0IE = 1;
   674  007BA4  8AF2               	bsf	intcon,5,c	;volatile
   675  007BA6  0012               	return	
   676  007BA8                     __end_of_timer_ini13:
   677                           	opt stack 0
   678                           tblptru	equ	0xFF8
   679                           tblptrh	equ	0xFF7
   680                           tblptrl	equ	0xFF6
   681                           tablat	equ	0xFF5
   682                           intcon	equ	0xFF2
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           status	equ	0xFD8
   686                           
   687 ;; *************** function _pic_ini13 *****************
   688 ;; Defined at:
   689 ;;		line 9 in file "Ap_ini.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;		None               void
   696 ;; Registers used:
   697 ;;		wreg, status,2
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   703 ;;      Params:         0       0       0       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    2
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  007BF2                     __ptext2:
   719                           	opt stack 0
   720  007BF2                     _pic_ini13:
   721                           	opt stack 28
   722                           
   723                           ;Ap_ini.c: 12: LATA = 0x00;
   724                           
   725                           ;incstack = 0
   726  007BF2  0E00               	movlw	0
   727  007BF4  6E89               	movwf	3977,c	;volatile
   728                           
   729                           ;Ap_ini.c: 13: LATB = 0x00;
   730  007BF6  0E00               	movlw	0
   731  007BF8  6E8A               	movwf	3978,c	;volatile
   732                           
   733                           ;Ap_ini.c: 14: LATC = 0x00;
   734  007BFA  0E00               	movlw	0
   735  007BFC  6E8B               	movwf	3979,c	;volatile
   736                           
   737                           ;Ap_ini.c: 15: LATD = 0x00;
   738  007BFE  0E00               	movlw	0
   739  007C00  6E8C               	movwf	3980,c	;volatile
   740                           
   741                           ;Ap_ini.c: 16: LATE = 0x00;
   742  007C02  0E00               	movlw	0
   743  007C04  6E8D               	movwf	3981,c	;volatile
   744                           
   745                           ;Ap_ini.c: 18: PORTA = 0x00;
   746  007C06  0E00               	movlw	0
   747  007C08  6E80               	movwf	3968,c	;volatile
   748                           
   749                           ;Ap_ini.c: 19: PORTB = 0x00;
   750  007C0A  0E00               	movlw	0
   751  007C0C  6E81               	movwf	3969,c	;volatile
   752                           
   753                           ;Ap_ini.c: 20: PORTC = 0x00;
   754  007C0E  0E00               	movlw	0
   755  007C10  6E82               	movwf	3970,c	;volatile
   756                           
   757                           ;Ap_ini.c: 21: PORTD = 0x00;
   758  007C12  0E00               	movlw	0
   759  007C14  6E83               	movwf	3971,c	;volatile
   760                           
   761                           ;Ap_ini.c: 22: PORTE = 0x00;
   762  007C16  0E00               	movlw	0
   763  007C18  6E84               	movwf	3972,c	;volatile
   764                           
   765                           ;Ap_ini.c: 26: TRISD = 0xF0;
   766  007C1A  0EF0               	movlw	240
   767  007C1C  6E95               	movwf	3989,c	;volatile
   768                           
   769                           ;Ap_ini.c: 27: TRISCbits.RC6 = 0;
   770  007C1E  9C94               	bcf	3988,6,c	;volatile
   771                           
   772                           ;Ap_ini.c: 28: TRISCbits.RC7 = 0;
   773  007C20  9E94               	bcf	3988,7,c	;volatile
   774                           
   775                           ;Ap_ini.c: 32: CMCON = 0x07;
   776  007C22  0E07               	movlw	7
   777  007C24  6EB4               	movwf	4020,c	;volatile
   778                           
   779                           ;Ap_ini.c: 33: ADCON1 = 0x0F;
   780  007C26  0E0F               	movlw	15
   781  007C28  6EC1               	movwf	4033,c	;volatile
   782                           
   783                           ;Ap_ini.c: 34: TRISA = 0xC0;
   784  007C2A  0EC0               	movlw	192
   785  007C2C  6E92               	movwf	3986,c	;volatile
   786                           
   787                           ;Ap_ini.c: 35: TRISE = 0x00;
   788  007C2E  0E00               	movlw	0
   789  007C30  6E96               	movwf	3990,c	;volatile
   790                           
   791                           ;Ap_ini.c: 39: TRISB = 0xFF;
   792  007C32  6893               	setf	3987,c	;volatile
   793  007C34  0012               	return	
   794  007C36                     __end_of_pic_ini13:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           intcon	equ	0xFF2
   801                           postinc0	equ	0xFEE
   802                           wreg	equ	0xFE8
   803                           status	equ	0xFD8
   804                           
   805 ;; *************** function _leds *****************
   806 ;; Defined at:
   807 ;;		line 8 in file "Lemos.C"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  velocidad       2   16[COMRAM] unsigned int 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   821 ;;      Params:         2       0       0       0       0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0       0       0       0       0
   823 ;;      Temps:          1       0       0       0       0       0       0       0       0
   824 ;;      Totals:         3       0       0       0       0       0       0       0       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    2
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text3
   836  007CDC                     __ptext3:
   837                           	opt stack 0
   838  007CDC                     _leds:
   839                           	opt stack 28
   840                           
   841                           ;Lemos.C: 9: static unsigned char i=1;
   842                           ;Lemos.C: 12: switch(i){
   843                           
   844                           ;incstack = 0
   845  007CDC  D02A               	goto	l960
   846  007CDE                     l932:
   847  007CDE  5023               	movf	_led_tout+1,w,c
   848  007CE0  1022               	iorwf	_led_tout,w,c
   849  007CE2  A4D8               	btfss	status,2,c
   850  007CE4  D034               	goto	l143
   851                           
   852                           ;Lemos.C: 14: LATDbits.LD2=~LATDbits.LD2;
   853  007CE6  748C               	btg	3980,2,c	;volatile
   854  007CE8  D00B               	goto	L2
   855  007CEA                     l938:
   856  007CEA  5023               	movf	_led_tout+1,w,c
   857  007CEC  1022               	iorwf	_led_tout,w,c
   858  007CEE  A4D8               	btfss	status,2,c
   859  007CF0  D02E               	goto	l143
   860                           
   861                           ;Lemos.C: 20: LATDbits.LD3=~LATDbits.LD3;
   862  007CF2  768C               	btg	3980,3,c	;volatile
   863  007CF4  D005               	goto	L2
   864  007CF6                     l944:
   865  007CF6  5023               	movf	_led_tout+1,w,c
   866  007CF8  1022               	iorwf	_led_tout,w,c
   867  007CFA  A4D8               	btfss	status,2,c
   868  007CFC  D028               	goto	l143
   869                           
   870                           ;Lemos.C: 26: LATCbits.LC6=~LATCbits.LC6;
   871  007CFE  7C8B               	btg	3979,6,c	;volatile
   872  007D00                     L2:
   873                           
   874                           ;Lemos.C: 27: led_tout = velocidad;
   875  007D00  C011  F022         	movff	leds@velocidad,_led_tout
   876  007D04  C012  F023         	movff	leds@velocidad+1,_led_tout+1
   877                           
   878                           ;Lemos.C: 28: i++;
   879  007D08  2A2D               	incf	leds@i,f,c
   880  007D0A  D021               	goto	l143
   881  007D0C                     l950:
   882  007D0C  5023               	movf	_led_tout+1,w,c
   883  007D0E  1022               	iorwf	_led_tout,w,c
   884  007D10  A4D8               	btfss	status,2,c
   885  007D12  D01D               	goto	l143
   886                           
   887                           ;Lemos.C: 32: LATCbits.LC7=~LATCbits.LC7;
   888  007D14  7E8B               	btg	3979,7,c	;volatile
   889                           
   890                           ;Lemos.C: 33: led_tout = velocidad;
   891  007D16  C011  F022         	movff	leds@velocidad,_led_tout
   892  007D1A  C012  F023         	movff	leds@velocidad+1,_led_tout+1
   893  007D1E  D004               	goto	L3
   894  007D20                     l956:
   895                           
   896                           ;Lemos.C: 38: led_tout = 1000;
   897  007D20  0E03               	movlw	3
   898  007D22  6E23               	movwf	_led_tout+1,c
   899  007D24  0EE8               	movlw	232
   900  007D26  6E22               	movwf	_led_tout,c
   901  007D28                     L3:
   902                           
   903                           ;Lemos.C: 39: i=1;
   904  007D28  6E13               	movwf	??_leds& (0+255),c
   905  007D2A  0E01               	movlw	1
   906  007D2C  6E2D               	movwf	leds@i,c
   907  007D2E  5013               	movf	??_leds& (0+255),w,c
   908                           
   909                           ;Lemos.C: 40: }
   910                           ;Lemos.C: 41: }
   911  007D30  D00E               	goto	l143
   912  007D32                     l960:
   913  007D32  502D               	movf	leds@i,w,c
   914                           
   915                           ; Switch size 1, requested type "space"
   916                           ; Number of cases is 4, Range of values is 1 to 4
   917                           ; switch strategies available:
   918                           ; Name         Instructions Cycles
   919                           ; simple_byte           13     7 (average)
   920                           ;	Chosen strategy is simple_byte
   921  007D34  0A01               	xorlw	1	; case 1
   922  007D36  B4D8               	btfsc	status,2,c
   923  007D38  D7D2               	goto	l932
   924  007D3A  0A03               	xorlw	3	; case 2
   925  007D3C  B4D8               	btfsc	status,2,c
   926  007D3E  D7D5               	goto	l938
   927  007D40  0A01               	xorlw	1	; case 3
   928  007D42  B4D8               	btfsc	status,2,c
   929  007D44  D7D8               	goto	l944
   930  007D46  0A07               	xorlw	7	; case 4
   931  007D48  B4D8               	btfsc	status,2,c
   932  007D4A  D7E0               	goto	l950
   933  007D4C  D7E9               	goto	l956
   934  007D4E                     l143:
   935  007D4E  0012               	return	
   936  007D50                     __end_of_leds:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _Send_4Disp *****************
   948 ;; Defined at:
   949 ;;		line 74 in file "Lemos.C"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  Umil            1    wreg     unsigned char 
   952 ;;  Cent            1   18[COMRAM] unsigned char 
   953 ;;  Dec             1   19[COMRAM] unsigned char 
   954 ;;  Uni             1   20[COMRAM] unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  Umil            1   22[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;		None               void
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         3       0       0       0       0       0       0       0       0
   967 ;;      Locals:         1       0       0       0       0       0       0       0       0
   968 ;;      Temps:          1       0       0       0       0       0       0       0       0
   969 ;;      Totals:         5       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        5 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    3
   973 ;; This function calls:
   974 ;;		_Send_Disp
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text4
   981  007DD6                     __ptext4:
   982                           	opt stack 0
   983  007DD6                     _Send_4Disp:
   984                           	opt stack 27
   985                           
   986                           ;incstack = 0
   987                           ;Send_4Disp@Umil stored from wreg
   988  007DD6  CFE8 F017          	movff	wreg,Send_4Disp@Umil
   989                           
   990                           ;Lemos.C: 76: static unsigned char Nro_Disp=1;
   991                           ;Lemos.C: 78: switch(Nro_Disp){
   992  007DDA  D03C               	goto	l928
   993  007DDC                     l159:
   994                           
   995                           ;Lemos.C: 80: if(!mux_tout){
   996  007DDC  662A               	tstfsz	_mux_tout,c
   997  007DDE  D048               	goto	l169
   998                           
   999                           ;Lemos.C: 81: Send_Disp(1,Umil);
  1000  007DE0  C017  F011         	movff	Send_4Disp@Umil,Send_Disp@Dato
  1001  007DE4  0E01               	movlw	1
  1002  007DE6  EC1B  F03E         	call	_Send_Disp
  1003                           
  1004                           ;Lemos.C: 82: mux_tout = 4;;
  1005  007DEA  6E16               	movwf	??_Send_4Disp& (0+255),c
  1006  007DEC  0E04               	movlw	4
  1007  007DEE  6E2A               	movwf	_mux_tout,c
  1008  007DF0  5016               	movf	??_Send_4Disp& (0+255),w,c
  1009                           
  1010                           ;Lemos.C: 83: Nro_Disp = 2;
  1011  007DF2  6E16               	movwf	??_Send_4Disp& (0+255),c
  1012  007DF4  0E02               	movlw	2
  1013  007DF6  D024               	goto	L6
  1014  007DF8                     l162:
  1015                           
  1016                           ;Lemos.C: 88: if(!mux_tout){
  1017  007DF8  662A               	tstfsz	_mux_tout,c
  1018  007DFA  D03A               	goto	l169
  1019                           
  1020                           ;Lemos.C: 89: Send_Disp(2,Cent);
  1021  007DFC  C013  F011         	movff	Send_4Disp@Cent,Send_Disp@Dato
  1022  007E00  0E02               	movlw	2
  1023  007E02  EC1B  F03E         	call	_Send_Disp
  1024                           
  1025                           ;Lemos.C: 90: mux_tout = 4;;
  1026  007E06  6E16               	movwf	??_Send_4Disp& (0+255),c
  1027  007E08  0E04               	movlw	4
  1028  007E0A  6E2A               	movwf	_mux_tout,c
  1029  007E0C  5016               	movf	??_Send_4Disp& (0+255),w,c
  1030                           
  1031                           ;Lemos.C: 91: Nro_Disp = 3;
  1032  007E0E  6E16               	movwf	??_Send_4Disp& (0+255),c
  1033  007E10  0E03               	movlw	3
  1034  007E12  D016               	goto	L6
  1035  007E14                     l164:
  1036                           
  1037                           ;Lemos.C: 96: if(!mux_tout){
  1038  007E14  662A               	tstfsz	_mux_tout,c
  1039  007E16  D02C               	goto	l169
  1040                           
  1041                           ;Lemos.C: 97: Send_Disp(3,Dec);
  1042  007E18  C014  F011         	movff	Send_4Disp@Dec,Send_Disp@Dato
  1043  007E1C  0E03               	movlw	3
  1044  007E1E  EC1B  F03E         	call	_Send_Disp
  1045                           
  1046                           ;Lemos.C: 98: mux_tout = 4;;
  1047  007E22  6E16               	movwf	??_Send_4Disp& (0+255),c
  1048  007E24  0E04               	movlw	4
  1049  007E26  6E2A               	movwf	_mux_tout,c
  1050  007E28  5016               	movf	??_Send_4Disp& (0+255),w,c
  1051                           
  1052                           ;Lemos.C: 99: Nro_Disp = 4;
  1053  007E2A  6E16               	movwf	??_Send_4Disp& (0+255),c
  1054  007E2C  0E04               	movlw	4
  1055  007E2E  D008               	goto	L6
  1056  007E30                     l166:
  1057                           
  1058                           ;Lemos.C: 104: if(!mux_tout){
  1059  007E30  662A               	tstfsz	_mux_tout,c
  1060  007E32  D01E               	goto	l169
  1061                           
  1062                           ;Lemos.C: 105: Send_Disp(4,Uni);
  1063  007E34  C015  F011         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1064  007E38  0E04               	movlw	4
  1065  007E3A  EC1B  F03E         	call	_Send_Disp
  1066  007E3E  D003               	goto	l926
  1067  007E40                     L6:
  1068  007E40  6E2C               	movwf	Send_4Disp@Nro_Disp,c
  1069  007E42  5016               	movf	??_Send_4Disp& (0+255),w,c
  1070  007E44  D015               	goto	l169
  1071  007E46                     l926:
  1072                           
  1073                           ;Lemos.C: 112: mux_tout = 4;;
  1074  007E46  6E16               	movwf	??_Send_4Disp& (0+255),c
  1075  007E48  0E04               	movlw	4
  1076  007E4A  6E2A               	movwf	_mux_tout,c
  1077  007E4C  5016               	movf	??_Send_4Disp& (0+255),w,c
  1078                           
  1079                           ;Lemos.C: 113: Nro_Disp = 1;
  1080  007E4E  6E16               	movwf	??_Send_4Disp& (0+255),c
  1081  007E50  0E01               	movlw	1
  1082  007E52  D7F6               	goto	L6
  1083  007E54                     l928:
  1084  007E54  502C               	movf	Send_4Disp@Nro_Disp,w,c
  1085                           
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 4, Range of values is 1 to 4
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte           13     7 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  007E56  0A01               	xorlw	1	; case 1
  1093  007E58  B4D8               	btfsc	status,2,c
  1094  007E5A  D7C0               	goto	l159
  1095  007E5C  0A03               	xorlw	3	; case 2
  1096  007E5E  B4D8               	btfsc	status,2,c
  1097  007E60  D7CB               	goto	l162
  1098  007E62  0A01               	xorlw	1	; case 3
  1099  007E64  B4D8               	btfsc	status,2,c
  1100  007E66  D7D6               	goto	l164
  1101  007E68  0A07               	xorlw	7	; case 4
  1102  007E6A  B4D8               	btfsc	status,2,c
  1103  007E6C  D7E1               	goto	l166
  1104  007E6E  D7EB               	goto	l926
  1105  007E70                     l169:
  1106  007E70  0012               	return	
  1107  007E72                     __end_of_Send_4Disp:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           intcon	equ	0xFF2
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           status	equ	0xFD8
  1117                           
  1118 ;; *************** function _Send_Disp *****************
  1119 ;; Defined at:
  1120 ;;		line 43 in file "Lemos.C"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  NroDisp         1    wreg     unsigned char 
  1123 ;;  Dato            1   16[COMRAM] unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  NroDisp         1   17[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;		None               void
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         1       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_Send_4Disp
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text5
  1150  007C36                     __ptext5:
  1151                           	opt stack 0
  1152  007C36                     _Send_Disp:
  1153                           	opt stack 27
  1154                           
  1155                           ;incstack = 0
  1156                           ;Send_Disp@NroDisp stored from wreg
  1157  007C36  CFE8 F012          	movff	wreg,Send_Disp@NroDisp
  1158                           
  1159                           ;Lemos.C: 45: LATA = 0;
  1160  007C3A  0E00               	movlw	0
  1161  007C3C  6E89               	movwf	3977,c	;volatile
  1162                           
  1163                           ;Lemos.C: 47: LATAbits.LA4 = 0;
  1164  007C3E  9889               	bcf	3977,4,c	;volatile
  1165                           
  1166                           ;Lemos.C: 48: LATAbits.LA5 = 0;
  1167  007C40  9A89               	bcf	3977,5,c	;volatile
  1168                           
  1169                           ;Lemos.C: 49: LATEbits.LATE0 = 0;
  1170  007C42  908D               	bcf	3981,0,c	;volatile
  1171                           
  1172                           ;Lemos.C: 50: LATEbits.LATE1 = 0;
  1173  007C44  928D               	bcf	3981,1,c	;volatile
  1174                           
  1175                           ;Lemos.C: 52: switch(NroDisp){
  1176  007C46  D008               	goto	l1008
  1177  007C48                     l149:
  1178                           
  1179                           ;Lemos.C: 57: LATAbits.LA5 = 1;
  1180  007C48  8A89               	bsf	3977,5,c	;volatile
  1181                           
  1182                           ;Lemos.C: 58: }break;
  1183  007C4A  D014               	goto	l1010
  1184  007C4C                     l150:
  1185                           
  1186                           ;Lemos.C: 60: LATEbits.LATE0 = 1;
  1187  007C4C  808D               	bsf	3981,0,c	;volatile
  1188                           
  1189                           ;Lemos.C: 61: }break;
  1190  007C4E  D012               	goto	l1010
  1191  007C50                     l151:
  1192                           
  1193                           ;Lemos.C: 63: LATEbits.LATE1 = 1;
  1194  007C50  828D               	bsf	3981,1,c	;volatile
  1195                           
  1196                           ;Lemos.C: 64: }break;
  1197  007C52  D010               	goto	l1010
  1198  007C54                     l152:
  1199                           
  1200                           ;Lemos.C: 66: LATAbits.LA4 = 1;
  1201  007C54  8889               	bsf	3977,4,c	;volatile
  1202                           
  1203                           ;Lemos.C: 67: }break;
  1204  007C56  D00E               	goto	l1010
  1205  007C58                     l1008:
  1206  007C58  5012               	movf	Send_Disp@NroDisp,w,c
  1207                           
  1208                           ; Switch size 1, requested type "space"
  1209                           ; Number of cases is 4, Range of values is 1 to 4
  1210                           ; switch strategies available:
  1211                           ; Name         Instructions Cycles
  1212                           ; simple_byte           13     7 (average)
  1213                           ;	Chosen strategy is simple_byte
  1214  007C5A  0A01               	xorlw	1	; case 1
  1215  007C5C  B4D8               	btfsc	status,2,c
  1216  007C5E  D7FA               	goto	l152
  1217  007C60  0A03               	xorlw	3	; case 2
  1218  007C62  B4D8               	btfsc	status,2,c
  1219  007C64  D7F1               	goto	l149
  1220  007C66  0A01               	xorlw	1	; case 3
  1221  007C68  B4D8               	btfsc	status,2,c
  1222  007C6A  D7F0               	goto	l150
  1223  007C6C  0A07               	xorlw	7	; case 4
  1224  007C6E  B4D8               	btfsc	status,2,c
  1225  007C70  D7EF               	goto	l151
  1226  007C72  D7F0               	goto	l152
  1227  007C74                     l1010:
  1228                           
  1229                           ;Lemos.C: 69: Dato = Dato & 0x0F;
  1230  007C74  5011               	movf	Send_Disp@Dato,w,c
  1231  007C76  0B0F               	andlw	15
  1232  007C78  6E11               	movwf	Send_Disp@Dato,c
  1233                           
  1234                           ;Lemos.C: 70: LATA = LATA & 0xF0;
  1235  007C7A  5089               	movf	3977,w,c	;volatile
  1236  007C7C  0BF0               	andlw	240
  1237  007C7E  6E89               	movwf	3977,c	;volatile
  1238                           
  1239                           ;Lemos.C: 71: LATA = LATA | Dato;
  1240  007C80  5089               	movf	3977,w,c	;volatile
  1241  007C82  1011               	iorwf	Send_Disp@Dato,w,c
  1242  007C84  6E89               	movwf	3977,c	;volatile
  1243  007C86  0012               	return	
  1244  007C88                     __end_of_Send_Disp:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           intcon	equ	0xFF2
  1251                           postinc0	equ	0xFEE
  1252                           wreg	equ	0xFE8
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _myISR *****************
  1256 ;; Defined at:
  1257 ;;		line 112 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;		None               void
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1273 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1274 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:       14 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    1
  1278 ;; This function calls:
  1279 ;;		_mux_display
  1280 ;;		_tic_timer0
  1281 ;; This function is called by:
  1282 ;;		Interrupt level 2
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	intcode
  1287  002008                     __pintcode:
  1288                           	opt stack 0
  1289  002008                     _myISR:
  1290                           	opt stack 27
  1291                           
  1292                           ;incstack = 0
  1293  002008  CFFA F003          	movff	pclath,??_myISR
  1294  00200C  CFFB F004          	movff	pclatu,??_myISR+1
  1295  002010  EDA8  F03E         	call	int_func,f	;refresh shadow registers
  1296                           pclatu	equ	0xFFB
  1297                           pclath	equ	0xFFA
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           intcon	equ	0xFF2
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           status	equ	0xFD8
  1306                           
  1307                           	psect	intcode_body
  1308  007D50                     __pintcode_body:
  1309                           	opt stack 27
  1310  007D50                     int_func:
  1311                           	opt stack 27
  1312  007D50  0006               	pop		; remove dummy address from shadow register refresh
  1313  007D52  CFE9 F005          	movff	fsr0l,??_myISR+2
  1314  007D56  CFEA F006          	movff	fsr0h,??_myISR+3
  1315  007D5A  CFE1 F007          	movff	fsr1l,??_myISR+4
  1316  007D5E  CFE2 F008          	movff	fsr1h,??_myISR+5
  1317  007D62  CFD9 F009          	movff	fsr2l,??_myISR+6
  1318  007D66  CFDA F00A          	movff	fsr2h,??_myISR+7
  1319  007D6A  CFF3 F00B          	movff	prodl,??_myISR+8
  1320  007D6E  CFF4 F00C          	movff	prodh,??_myISR+9
  1321  007D72  CFF6 F00D          	movff	tblptrl,??_myISR+10
  1322  007D76  CFF7 F00E          	movff	tblptrh,??_myISR+11
  1323  007D7A  CFF8 F00F          	movff	tblptru,??_myISR+12
  1324  007D7E  CFF5 F010          	movff	tablat,??_myISR+13
  1325                           
  1326                           ;main.c: 121: if(TMR0IF){
  1327  007D82  A4F2               	btfss	intcon,2,c	;volatile
  1328  007D84  D006               	goto	i2l1022
  1329                           
  1330                           ;main.c: 122: INTCONbits.TMR0IF = 0;
  1331  007D86  94F2               	bcf	intcon,2,c	;volatile
  1332                           
  1333                           ;main.c: 123: TMR0L = 209;
  1334  007D88  0ED1               	movlw	209
  1335  007D8A  6ED6               	movwf	4054,c	;volatile
  1336                           
  1337                           ;main.c: 124: TMR0H = 0xFF;
  1338  007D8C  68D7               	setf	4055,c	;volatile
  1339                           
  1340                           ;main.c: 126: tic_timer0();
  1341  007D8E  ECD4  F03D         	call	_tic_timer0	;wreg free
  1342  007D92                     i2l1022:
  1343                           
  1344                           ;main.c: 128: }
  1345                           ;main.c: 130: if(MEMDIG == 1)
  1346  007D92  0426               	decf	_MEMDIG,w,c
  1347  007D94  B4D8               	btfsc	status,2,c
  1348                           
  1349                           ;main.c: 131: mux_display();
  1350  007D96  EC44  F03E         	call	_mux_display	;wreg free
  1351                           
  1352                           ;main.c: 132: TMR0IF = 0;
  1353  007D9A  94F2               	bcf	intcon,2,c	;volatile
  1354                           
  1355                           ;main.c: 133: return;
  1356  007D9C  C010  FFF5         	movff	??_myISR+13,tablat
  1357  007DA0  C00F  FFF8         	movff	??_myISR+12,tblptru
  1358  007DA4  C00E  FFF7         	movff	??_myISR+11,tblptrh
  1359  007DA8  C00D  FFF6         	movff	??_myISR+10,tblptrl
  1360  007DAC  C00C  FFF4         	movff	??_myISR+9,prodh
  1361  007DB0  C00B  FFF3         	movff	??_myISR+8,prodl
  1362  007DB4  C00A  FFDA         	movff	??_myISR+7,fsr2h
  1363  007DB8  C009  FFD9         	movff	??_myISR+6,fsr2l
  1364  007DBC  C008  FFE2         	movff	??_myISR+5,fsr1h
  1365  007DC0  C007  FFE1         	movff	??_myISR+4,fsr1l
  1366  007DC4  C006  FFEA         	movff	??_myISR+3,fsr0h
  1367  007DC8  C005  FFE9         	movff	??_myISR+2,fsr0l
  1368  007DCC  C004  FFFB         	movff	??_myISR+1,pclatu
  1369  007DD0  C003  FFFA         	movff	??_myISR,pclath
  1370  007DD4  0011               	retfie		f
  1371  007DD6                     __end_of_myISR:
  1372                           	opt stack 0
  1373                           pclatu	equ	0xFFB
  1374                           pclath	equ	0xFFA
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           prodh	equ	0xFF4
  1380                           prodl	equ	0xFF3
  1381                           intcon	equ	0xFF2
  1382                           postinc0	equ	0xFEE
  1383                           fsr0h	equ	0xFEA
  1384                           fsr0l	equ	0xFE9
  1385                           wreg	equ	0xFE8
  1386                           fsr1h	equ	0xFE2
  1387                           fsr1l	equ	0xFE1
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392 ;; *************** function _tic_timer0 *****************
  1393 ;; Defined at:
  1394 ;;		line 117 in file "Lemos.C"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;		None               void
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_myISR
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text7
  1422  007BA8                     __ptext7:
  1423                           	opt stack 0
  1424  007BA8                     _tic_timer0:
  1425                           	opt stack 27
  1426                           
  1427                           ;Lemos.C: 118: if(mux_tout)mux_tout--;
  1428                           
  1429                           ;incstack = 0
  1430  007BA8  502A               	movf	_mux_tout,w,c
  1431  007BAA  A4D8               	btfss	status,2,c
  1432  007BAC  062A               	decf	_mux_tout,f,c
  1433                           
  1434                           ;Lemos.C: 119: if(bot_tout)bot_tout--;
  1435  007BAE  5029               	movf	_bot_tout,w,c
  1436  007BB0  A4D8               	btfss	status,2,c
  1437  007BB2  0629               	decf	_bot_tout,f,c
  1438                           
  1439                           ;Lemos.C: 120: if(led_tout)led_tout--;
  1440  007BB4  5023               	movf	_led_tout+1,w,c
  1441  007BB6  1022               	iorwf	_led_tout,w,c
  1442  007BB8  B4D8               	btfsc	status,2,c
  1443  007BBA  D003               	goto	i2l175
  1444  007BBC  0622               	decf	_led_tout,f,c
  1445  007BBE  A0D8               	btfss	status,0,c
  1446  007BC0  0623               	decf	_led_tout+1,f,c
  1447  007BC2                     i2l175:
  1448  007BC2  0012               	return	
  1449  007BC4                     __end_of_tic_timer0:
  1450                           	opt stack 0
  1451                           pclatu	equ	0xFFB
  1452                           pclath	equ	0xFFA
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           prodh	equ	0xFF4
  1458                           prodl	equ	0xFF3
  1459                           intcon	equ	0xFF2
  1460                           postinc0	equ	0xFEE
  1461                           fsr0h	equ	0xFEA
  1462                           fsr0l	equ	0xFE9
  1463                           wreg	equ	0xFE8
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           fsr2h	equ	0xFDA
  1467                           fsr2l	equ	0xFD9
  1468                           status	equ	0xFD8
  1469                           
  1470 ;; *************** function _mux_display *****************
  1471 ;; Defined at:
  1472 ;;		line 6 in file "Robello.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  datoenv         1    1[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_myISR
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text8
  1500  007C88                     __ptext8:
  1501                           	opt stack 0
  1502  007C88                     _mux_display:
  1503                           	opt stack 27
  1504                           
  1505                           ;Robello.c: 8: unsigned char datoenv;
  1506                           ;Robello.c: 9: if(contdisp==0)
  1507                           
  1508                           ;incstack = 0
  1509  007C88  662B               	tstfsz	mux_display@contdisp,c
  1510  007C8A  D004               	goto	i2l978
  1511                           
  1512                           ;Robello.c: 10: {
  1513                           ;Robello.c: 11: LATEbits.LATE1=0;
  1514  007C8C  928D               	bcf	3981,1,c	;volatile
  1515                           
  1516                           ;Robello.c: 12: LATAbits.LA4=1;
  1517  007C8E  8889               	bsf	3977,4,c	;volatile
  1518                           
  1519                           ;Robello.c: 13: datoenv=UMIL;
  1520  007C90  C027  F002         	movff	_UMIL,mux_display@datoenv
  1521  007C94                     i2l978:
  1522                           
  1523                           ;Robello.c: 14: }
  1524                           ;Robello.c: 15: if(contdisp==1)
  1525  007C94  042B               	decf	mux_display@contdisp,w,c
  1526  007C96  A4D8               	btfss	status,2,c
  1527  007C98  D004               	goto	i2l982
  1528                           
  1529                           ;Robello.c: 16: {
  1530                           ;Robello.c: 17: LATAbits.LA4=0;
  1531  007C9A  9889               	bcf	3977,4,c	;volatile
  1532                           
  1533                           ;Robello.c: 18: LATAbits.LA5=1;
  1534  007C9C  8A89               	bsf	3977,5,c	;volatile
  1535                           
  1536                           ;Robello.c: 19: datoenv=CENT;
  1537  007C9E  C024  F002         	movff	_CENT,mux_display@datoenv
  1538  007CA2                     i2l982:
  1539                           
  1540                           ;Robello.c: 20: }
  1541                           ;Robello.c: 22: if(contdisp==2)
  1542  007CA2  502B               	movf	mux_display@contdisp,w,c
  1543  007CA4  0A02               	xorlw	2
  1544  007CA6  A4D8               	btfss	status,2,c
  1545  007CA8  D004               	goto	i2l986
  1546                           
  1547                           ;Robello.c: 23: {
  1548                           ;Robello.c: 24: LATAbits.LA5=0;
  1549  007CAA  9A89               	bcf	3977,5,c	;volatile
  1550                           
  1551                           ;Robello.c: 25: LATEbits.LATE0=1;
  1552  007CAC  808D               	bsf	3981,0,c	;volatile
  1553                           
  1554                           ;Robello.c: 26: datoenv=DEC;
  1555  007CAE  C025  F002         	movff	_DEC,mux_display@datoenv
  1556  007CB2                     i2l986:
  1557                           
  1558                           ;Robello.c: 27: }
  1559                           ;Robello.c: 30: if(contdisp==3)
  1560  007CB2  502B               	movf	mux_display@contdisp,w,c
  1561  007CB4  0A03               	xorlw	3
  1562  007CB6  A4D8               	btfss	status,2,c
  1563  007CB8  D004               	goto	i2l990
  1564                           
  1565                           ;Robello.c: 31: {
  1566                           ;Robello.c: 32: LATEbits.LATE0=0;
  1567  007CBA  908D               	bcf	3981,0,c	;volatile
  1568                           
  1569                           ;Robello.c: 33: LATEbits.LATE1=1;
  1570  007CBC  828D               	bsf	3981,1,c	;volatile
  1571                           
  1572                           ;Robello.c: 34: datoenv=UNI;
  1573  007CBE  C028  F002         	movff	_UNI,mux_display@datoenv
  1574  007CC2                     i2l990:
  1575                           
  1576                           ;Robello.c: 35: }
  1577                           ;Robello.c: 37: LATA = (LATA & 0xF0)|(datoenv & 0x0F);
  1578  007CC2  C002  F001         	movff	mux_display@datoenv,??_mux_display
  1579  007CC6  0E0F               	movlw	15
  1580  007CC8  1601               	andwf	??_mux_display,f,c
  1581  007CCA  5089               	movf	3977,w,c	;volatile
  1582  007CCC  0BF0               	andlw	240
  1583  007CCE  1001               	iorwf	??_mux_display,w,c
  1584  007CD0  6E89               	movwf	3977,c	;volatile
  1585                           
  1586                           ;Robello.c: 40: contdisp++;
  1587  007CD2  2A2B               	incf	mux_display@contdisp,f,c
  1588                           
  1589                           ;Robello.c: 43: contdisp=(contdisp & 3);
  1590  007CD4  502B               	movf	mux_display@contdisp,w,c
  1591  007CD6  0B03               	andlw	3
  1592  007CD8  6E2B               	movwf	mux_display@contdisp,c
  1593  007CDA  0012               	return	
  1594  007CDC                     __end_of_mux_display:
  1595                           	opt stack 0
  1596  0000                     pclatu	equ	0xFFB
  1597                           pclath	equ	0xFFA
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodh	equ	0xFF4
  1603                           prodl	equ	0xFF3
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           fsr0h	equ	0xFEA
  1607                           fsr0l	equ	0xFE9
  1608                           wreg	equ	0xFE8
  1609                           fsr1h	equ	0xFE2
  1610                           fsr1l	equ	0xFE1
  1611                           fsr2h	equ	0xFDA
  1612                           fsr2l	equ	0xFD9
  1613                           status	equ	0xFD8
  1614                           pclatu	equ	0xFFB
  1615                           pclath	equ	0xFFA
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           prodh	equ	0xFF4
  1621                           prodl	equ	0xFF3
  1622                           intcon	equ	0xFF2
  1623                           postinc0	equ	0xFEE
  1624                           fsr0h	equ	0xFEA
  1625                           fsr0l	equ	0xFE9
  1626                           wreg	equ	0xFE8
  1627                           fsr1h	equ	0xFE2
  1628                           fsr1l	equ	0xFE1
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633                           	psect	rparam
  1634  0000                     pclatu	equ	0xFFB
  1635                           pclath	equ	0xFFA
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           prodh	equ	0xFF4
  1641                           prodl	equ	0xFF3
  1642                           intcon	equ	0xFF2
  1643                           postinc0	equ	0xFEE
  1644                           fsr0h	equ	0xFEA
  1645                           fsr0l	equ	0xFE9
  1646                           wreg	equ	0xFE8
  1647                           fsr1h	equ	0xFE2
  1648                           fsr1l	equ	0xFE1
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_4Disp
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    _myISR->_mux_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     677
                                             23 COMRAM    10    10      0
                         _Send_4Disp
                               _leds
                          _pic_ini13
                        _timer_ini13
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leds                                                 3     1      2      94
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           5     2      3     343
                                             18 COMRAM     5     2      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     181
                                             16 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0      15
                                              2 COMRAM    14    14      0
                        _mux_display
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mux_display                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   _leds
   _pic_ini13
   _timer_ini13

 _myISR (ROOT)
   _mux_display
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      2D       1       47.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      20        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Jun 11 08:31:06 2014

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l150 7C4C                      l151 7C50  
                    l143 7D4E                      l152 7C54                      l162 7DF8  
                    l164 7E14                      l149 7C48                      l166 7E30  
                    l159 7DDC                      l169 7E70                      _DEC 0025  
                    l814 7F16                      l806 7EF8                      l932 7CDE  
                    l836 7F58                      l828 7F3A                      l926 7E46  
                    l950 7D0C                      l790 7EB8                      l928 7E54  
                    l944 7CF6                      l960 7D32                      l880 7FF2  
                    l856 7F9A                      l848 7F7C                      l938 7CEA  
                    l956 7D20                      l876 7FE0                      l868 7FC2  
           __CFG_CPB$OFF 000000                      _UNI 0028                      wreg 000FE8  
          Send_Disp@Dato 0011             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1010 7C74                     l1008 7C58                     _CENT 0024  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _UMIL 0027  
                   _main 7E72                     _leds 7CDC                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 2014  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000  
                  ?_main 0001                    ?_leds 0011                    _CMCON 000FB4  
                  i2l175 7BC2                    i2l990 7CC2                    i2l982 7CA2  
                  i2l986 7CB2                    i2l978 7C94                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000           __CFG_EBTRB$OFF 000000                    _myISR 2008  
                  main@a 0021                    main@b 0020                    leds@i 002D  
                  tablat 000FF5                    status 000FD8          __initialization 7BC4  
           __end_of_main 8000             __end_of_leds 7D50                   ??_main 0018  
                 ??_leds 0013            __activetblptr 000002               _Send_4Disp 7DD6  
                 _ADCON1 000FC1                   ?_myISR 0001                   _MEMDIG 0026  
                 i2l1022 7D92                   _TMR0IF 007F92           __CFG_VREGEN$ON 000000  
         __CFG_XINST$OFF 000000       __size_of_Send_Disp 0052           __CFG_STVREN$ON 000000  
                 clear_0 7BCA            main@velocidad 001A             __pdataCOMRAM 002C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ?_timer_ini13 0001             ?_mux_display 0001               __accesstop 0060  
__end_of__initialization 7BE8          __CFG_PBADEN$OFF 000000         Send_Disp@NroDisp 0012  
         __pcstackCOMRAM 0001            __end_of_myISR 7DD6            leds@velocidad 0011  
            ?_Send_4Disp 0013                  ??_myISR 0003        __end_of_Send_Disp 7C88  
     __size_of_pic_ini13 0044       Send_4Disp@Nro_Disp 002C                  __Hparam 0000  
                __Lparam 0000      __size_of_Send_4Disp 009C                  __pcinit 7BC4  
                __ramtop 0800                  __ptext0 7E72                  __ptext1 7B90  
                __ptext2 7BF2                  __ptext3 7CDC                  __ptext4 7DD6  
                __ptext5 7C36                  __ptext7 7BA8                  __ptext8 7C88  
              _T0CONbits 000FD5        __end_of_pic_ini13 7C36      mux_display@contdisp 002B  
         __pintcode_body 7D50     __size_of_timer_ini13 0018     end_of_initialization 7BE8  
          __Lmediumconst 0000                  int_func 7D50     __size_of_mux_display 0054  
             _tic_timer0 7BA8                  postinc0 000FEE                _PORTBbits 000F81  
              _PORTDbits 000F83                _TRISCbits 000F94            __pidataCOMRAM 2004  
           ??_Send_4Disp 0016      start_initialization 7BC4                _Send_Disp 7C36  
            ?_tic_timer0 0001       __end_of_Send_4Disp 7E72         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0022               ?_Send_Disp 0011                __pintcode 2008  
    __size_of_tic_timer0 001C           __size_of_myISR 5DCE                _pic_ini13 7BF2  
     mux_display@datoenv 0002                 _LATAbits 000F89                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _LATEbits 000F8D         __CFG_WDTPS$32768 000000  
              main@faoff 001D            ??_timer_ini13 0011           Send_4Disp@Cent 0013  
         Send_4Disp@Umil 0017               ?_pic_ini13 0001            ??_mux_display 0001  
            ??_Send_Disp 0012                 __Hrparam 0000                 __Lrparam 0000  
               _bot_tout 0029                 _led_tout 0022      __end_of_timer_ini13 7BA8  
          __size_of_main 018E            __size_of_leds 0074             ??_tic_timer0 0001  
    __end_of_mux_display 7CDC                 _mux_tout 002A                 main@faon 001C  
               main@fbon 001E                 main@fvel 001F            Send_4Disp@Dec 0014  
          Send_4Disp@Uni 0015    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
     __end_of_tic_timer0 7BC4              ??_pic_ini13 0011                 intlevel2 0000  
            _timer_ini13 7B90       __CFG_FOSC$HSPLL_HS 000000              _mux_display 7C88  
