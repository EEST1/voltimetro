

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat May 10 13:21:41 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  002004                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for Send_4Disp@Nro_Disp
    27  002004  01                 	db	1
    28                           
    29                           ;initializer for leds@i
    30  002005  01                 	db	1
    31  0000                     _ADCON1	set	4033
    32  0000                     _CMCON	set	4020
    33  0000                     _INTCONbits	set	4082
    34  0000                     _LATA	set	3977
    35  0000                     _LATAbits	set	3977
    36  0000                     _LATB	set	3978
    37  0000                     _LATC	set	3979
    38  0000                     _LATCbits	set	3979
    39  0000                     _LATD	set	3980
    40  0000                     _LATDbits	set	3980
    41  0000                     _LATE	set	3981
    42  0000                     _LATEbits	set	3981
    43  0000                     _PORTA	set	3968
    44  0000                     _PORTB	set	3969
    45  0000                     _PORTC	set	3970
    46  0000                     _PORTD	set	3971
    47  0000                     _PORTDbits	set	3971
    48  0000                     _PORTE	set	3972
    49  0000                     _T0CONbits	set	4053
    50  0000                     _TMR0H	set	4055
    51  0000                     _TMR0L	set	4054
    52  0000                     _TRISA	set	3986
    53  0000                     _TRISCbits	set	3988
    54  0000                     _TRISD	set	3989
    55  0000                     _TRISE	set	3990
    56  0000                     _TMR0IF	set	32658
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  007C3C                     __pcinit:
    62                           	opt stack 0
    63  007C3C                     start_initialization:
    64                           	opt stack 0
    65  007C3C                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (4 bytes)
    69  007C3C  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
    70  007C3E  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
    71  007C40  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
    72  007C42  6A20               	clrf	__pbssCOMRAM& (0+255),c
    73                           
    74                           ; Initialize objects allocated to COMRAM (2 bytes)
    75                           ; load TBLPTR registers with __pidataCOMRAM
    76  007C44  0E04               	movlw	low __pidataCOMRAM
    77  007C46  6EF6               	movwf	tblptrl,c
    78  007C48  0E20               	movlw	high __pidataCOMRAM
    79  007C4A  6EF7               	movwf	tblptrh,c
    80  007C4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    81  007C4E  6EF8               	movwf	tblptru,c
    82  007C50  0009               	tblrd		*+	;fetch initializer
    83  007C52  CFF5 F024          	movff	tablat,__pdataCOMRAM
    84  007C56  0009               	tblrd		*+	;fetch initializer
    85  007C58  CFF5 F025          	movff	tablat,__pdataCOMRAM+1
    86  007C5C                     end_of_initialization:
    87                           	opt stack 0
    88  007C5C                     __end_of__initialization:
    89                           	opt stack 0
    90  007C5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
    91  007C5E  6EF8               	movwf	tblptru,c
    92  007C60  0100               	movlb	0
    93  007C62  EF3F  F03F         	goto	_main	;jump to C main() function
    94                           tblptru	equ	0xFF8
    95                           tblptrh	equ	0xFF7
    96                           tblptrl	equ	0xFF6
    97                           tablat	equ	0xFF5
    98                           
    99                           	psect	bssCOMRAM
   100  000020                     __pbssCOMRAM:
   101                           	opt stack 0
   102  000020                     _led_tout:
   103                           	opt stack 0
   104  000020                     	ds	2
   105  000022                     _bot_tout:
   106                           	opt stack 0
   107  000022                     	ds	1
   108  000023                     _mux_tout:
   109                           	opt stack 0
   110  000023                     	ds	1
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           
   116                           	psect	dataCOMRAM
   117  000024                     __pdataCOMRAM:
   118                           	opt stack 0
   119  000024                     Send_4Disp@Nro_Disp:
   120                           	opt stack 0
   121  000024                     	ds	1
   122  000025                     leds@i:
   123                           	opt stack 0
   124  000025                     	ds	1
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	opt stack 0
   133  000001                     ??_myISR:
   134                           
   135                           ; 0 bytes @ 0x0
   136  000001                     	ds	14
   137  00000F                     Send_Disp@Dato:
   138                           	opt stack 0
   139  00000F                     leds@velocidad:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0xE
   143  00000F                     	ds	1
   144  000010                     Send_Disp@NroDisp:
   145                           	opt stack 0
   146                           
   147                           ; 1 bytes @ 0xF
   148  000010                     	ds	1
   149  000011                     ??_leds:
   150  000011                     Send_4Disp@Cent:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x10
   154  000011                     	ds	1
   155  000012                     Send_4Disp@Dec:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x11
   159  000012                     	ds	1
   160  000013                     Send_4Disp@Uni:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x12
   164  000013                     	ds	1
   165  000014                     ??_Send_4Disp:
   166                           
   167                           ; 0 bytes @ 0x13
   168  000014                     	ds	1
   169  000015                     Send_4Disp@Umil:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x14
   173  000015                     	ds	1
   174  000016                     ??_main:
   175                           
   176                           ; 0 bytes @ 0x15
   177  000016                     	ds	2
   178  000018                     main@velocidad:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x17
   182  000018                     	ds	2
   183  00001A                     main@faon:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0x19
   187  00001A                     	ds	1
   188  00001B                     main@faoff:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x1A
   192  00001B                     	ds	1
   193  00001C                     main@fbon:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x1B
   197  00001C                     	ds	1
   198  00001D                     main@fvel:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x1C
   202  00001D                     	ds	1
   203  00001E                     main@b:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x1D
   207  00001E                     	ds	1
   208  00001F                     main@a:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x1E
   212  00001F                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 30 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;  velocidad       2   23[COMRAM] unsigned int 
   228 ;;  a               1   30[COMRAM] unsigned char 
   229 ;;  b               1   29[COMRAM] unsigned char 
   230 ;;  fvel            1   28[COMRAM] unsigned char 
   231 ;;  fbon            1   27[COMRAM] unsigned char 
   232 ;;  faoff           1   26[COMRAM] unsigned char 
   233 ;;  faon            1   25[COMRAM] unsigned char 
   234 ;; Return value:  Size  Location     Type
   235 ;;		None               void
   236 ;; Registers used:
   237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   243 ;;      Params:         0       0       0       0       0       0       0       0       0
   244 ;;      Locals:         8       0       0       0       0       0       0       0       0
   245 ;;      Temps:          2       0       0       0       0       0       0       0       0
   246 ;;      Totals:        10       0       0       0       0       0       0       0       0
   247 ;;Total ram usage:       10 bytes
   248 ;; Hardware stack levels required when called:    4
   249 ;; This function calls:
   250 ;;		_Send_4Disp
   251 ;;		_leds
   252 ;;		_pic_ini13
   253 ;;		_timer_ini13
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  007E7E                     __ptext0:
   261                           	opt stack 0
   262  007E7E                     _main:
   263                           	opt stack 27
   264                           
   265                           ;main.c: 32: unsigned char a=0,b=1;
   266                           
   267                           ;incstack = 0
   268  007E7E  6E16               	movwf	??_main& (0+255),c
   269  007E80  0E00               	movlw	0
   270  007E82  6E1F               	movwf	main@a,c
   271  007E84  5016               	movf	??_main& (0+255),w,c
   272  007E86  6E16               	movwf	??_main& (0+255),c
   273  007E88  0E01               	movlw	1
   274  007E8A  6E1E               	movwf	main@b,c
   275  007E8C  5016               	movf	??_main& (0+255),w,c
   276                           
   277                           ;main.c: 33: unsigned char faon=0,faoff=0;
   278  007E8E  6E16               	movwf	??_main& (0+255),c
   279  007E90  0E00               	movlw	0
   280  007E92  6E1A               	movwf	main@faon,c
   281  007E94  5016               	movf	??_main& (0+255),w,c
   282  007E96  6E16               	movwf	??_main& (0+255),c
   283  007E98  0E00               	movlw	0
   284  007E9A  6E1B               	movwf	main@faoff,c
   285  007E9C  5016               	movf	??_main& (0+255),w,c
   286                           
   287                           ;main.c: 34: unsigned char fbon=0,fvel=0;
   288  007E9E  6E16               	movwf	??_main& (0+255),c
   289  007EA0  0E00               	movlw	0
   290  007EA2  6E1C               	movwf	main@fbon,c
   291  007EA4  5016               	movf	??_main& (0+255),w,c
   292  007EA6  6E16               	movwf	??_main& (0+255),c
   293  007EA8  0E00               	movlw	0
   294  007EAA  6E1D               	movwf	main@fvel,c
   295  007EAC  5016               	movf	??_main& (0+255),w,c
   296                           
   297                           ;main.c: 35: unsigned int velocidad = 100;
   298  007EAE  0E00               	movlw	0
   299  007EB0  6E19               	movwf	main@velocidad+1,c
   300  007EB2  0E64               	movlw	100
   301  007EB4  6E18               	movwf	main@velocidad,c
   302                           
   303                           ;main.c: 36: pic_ini13();
   304  007EB6  EC33  F03E         	call	_pic_ini13	;wreg free
   305                           
   306                           ;main.c: 37: timer_ini13();
   307  007EBA  EC04  F03E         	call	_timer_ini13	;wreg free
   308                           
   309                           ;main.c: 42: INTCONbits.GIE = 1;
   310  007EBE  8EF2               	bsf	intcon,7,c	;volatile
   311                           
   312                           ;main.c: 43: (INTCONbits.GIE = 1);
   313  007EC0  8EF2               	bsf	intcon,7,c	;volatile
   314                           
   315                           ;main.c: 44: T0CONbits.TMR0ON = 1;
   316  007EC2  8ED5               	bsf	4053,7,c	;volatile
   317  007EC4                     l745:
   318                           
   319                           ;main.c: 56: Send_4Disp(a,b,3,4);
   320  007EC4  C01E  F011         	movff	main@b,Send_4Disp@Cent
   321  007EC8  6E16               	movwf	??_main& (0+255),c
   322  007ECA  0E03               	movlw	3
   323  007ECC  6E12               	movwf	Send_4Disp@Dec,c
   324  007ECE  5016               	movf	??_main& (0+255),w,c
   325  007ED0  6E17               	movwf	(??_main+1)& (0+255),c
   326  007ED2  0E04               	movlw	4
   327  007ED4  6E13               	movwf	Send_4Disp@Uni,c
   328  007ED6  5017               	movf	(??_main+1)& (0+255),w,c
   329  007ED8  501F               	movf	main@a,w,c
   330  007EDA  ECF1  F03E         	call	_Send_4Disp
   331                           
   332                           ;main.c: 62: if(!PORTDbits.RD4 && a < 9 && faon ==0 && !bot_tout){
   333  007EDE  B883               	btfsc	3971,4,c	;volatile
   334  007EE0  D011               	goto	l761
   335  007EE2  0E09               	movlw	9
   336  007EE4  5C1F               	subwf	main@a,w,c
   337  007EE6  B0D8               	btfsc	status,0,c
   338  007EE8  D00D               	goto	l761
   339  007EEA  661A               	tstfsz	main@faon,c
   340  007EEC  D00B               	goto	l761
   341  007EEE  6622               	tstfsz	_bot_tout,c
   342  007EF0  D009               	goto	l761
   343                           
   344                           ;main.c: 63: a++;
   345  007EF2  2A1F               	incf	main@a,f,c
   346                           
   347                           ;main.c: 64: faon = 1;
   348  007EF4  6E16               	movwf	??_main& (0+255),c
   349  007EF6  0E01               	movlw	1
   350  007EF8  6E1A               	movwf	main@faon,c
   351  007EFA  5016               	movf	??_main& (0+255),w,c
   352                           
   353                           ;main.c: 65: bot_tout = 100;;
   354  007EFC  6E16               	movwf	??_main& (0+255),c
   355  007EFE  0E64               	movlw	100
   356  007F00  6E22               	movwf	_bot_tout,c
   357  007F02  5016               	movf	??_main& (0+255),w,c
   358  007F04                     l761:
   359                           
   360                           ;main.c: 66: }
   361                           ;main.c: 67: if(PORTDbits.RD4 && faon == 1 && !bot_tout){
   362  007F04  A883               	btfss	3971,4,c	;volatile
   363  007F06  D00D               	goto	l769
   364  007F08  041A               	decf	main@faon,w,c
   365  007F0A  A4D8               	btfss	status,2,c
   366  007F0C  D00A               	goto	l769
   367  007F0E  6622               	tstfsz	_bot_tout,c
   368  007F10  D008               	goto	l769
   369                           
   370                           ;main.c: 68: faon=0;
   371  007F12  6E16               	movwf	??_main& (0+255),c
   372  007F14  0E00               	movlw	0
   373  007F16  6E1A               	movwf	main@faon,c
   374  007F18  5016               	movf	??_main& (0+255),w,c
   375                           
   376                           ;main.c: 69: bot_tout = 100;;
   377  007F1A  6E16               	movwf	??_main& (0+255),c
   378  007F1C  0E64               	movlw	100
   379  007F1E  6E22               	movwf	_bot_tout,c
   380  007F20  5016               	movf	??_main& (0+255),w,c
   381  007F22                     l769:
   382                           
   383                           ;main.c: 70: }
   384                           ;main.c: 71: if(!PORTDbits.RD5 && a > 0 && faoff ==0 && !bot_tout){
   385  007F22  BA83               	btfsc	3971,5,c	;volatile
   386  007F24  D010               	goto	l783
   387  007F26  501F               	movf	main@a,w,c
   388  007F28  B4D8               	btfsc	status,2,c
   389  007F2A  D00D               	goto	l783
   390  007F2C  661B               	tstfsz	main@faoff,c
   391  007F2E  D00B               	goto	l783
   392  007F30  6622               	tstfsz	_bot_tout,c
   393  007F32  D009               	goto	l783
   394                           
   395                           ;main.c: 72: a--;
   396  007F34  061F               	decf	main@a,f,c
   397                           
   398                           ;main.c: 73: faoff = 1;
   399  007F36  6E16               	movwf	??_main& (0+255),c
   400  007F38  0E01               	movlw	1
   401  007F3A  6E1B               	movwf	main@faoff,c
   402  007F3C  5016               	movf	??_main& (0+255),w,c
   403                           
   404                           ;main.c: 74: bot_tout = 100;;
   405  007F3E  6E16               	movwf	??_main& (0+255),c
   406  007F40  0E64               	movlw	100
   407  007F42  6E22               	movwf	_bot_tout,c
   408  007F44  5016               	movf	??_main& (0+255),w,c
   409  007F46                     l783:
   410                           
   411                           ;main.c: 75: }
   412                           ;main.c: 76: if(PORTDbits.RD5 && faoff == 1 && !bot_tout){
   413  007F46  AA83               	btfss	3971,5,c	;volatile
   414  007F48  D00D               	goto	l791
   415  007F4A  041B               	decf	main@faoff,w,c
   416  007F4C  A4D8               	btfss	status,2,c
   417  007F4E  D00A               	goto	l791
   418  007F50  6622               	tstfsz	_bot_tout,c
   419  007F52  D008               	goto	l791
   420                           
   421                           ;main.c: 77: faoff=0;
   422  007F54  6E16               	movwf	??_main& (0+255),c
   423  007F56  0E00               	movlw	0
   424  007F58  6E1B               	movwf	main@faoff,c
   425  007F5A  5016               	movf	??_main& (0+255),w,c
   426                           
   427                           ;main.c: 78: bot_tout = 100;;
   428  007F5C  6E16               	movwf	??_main& (0+255),c
   429  007F5E  0E64               	movlw	100
   430  007F60  6E22               	movwf	_bot_tout,c
   431  007F62  5016               	movf	??_main& (0+255),w,c
   432  007F64                     l791:
   433                           
   434                           ;main.c: 79: }
   435                           ;main.c: 81: if(!PORTDbits.RD6 && fbon ==0 && !bot_tout){
   436  007F64  BC83               	btfsc	3971,6,c	;volatile
   437  007F66  D010               	goto	l803
   438  007F68  661C               	tstfsz	main@fbon,c
   439  007F6A  D00E               	goto	l803
   440  007F6C  6622               	tstfsz	_bot_tout,c
   441  007F6E  D00C               	goto	l803
   442                           
   443                           ;main.c: 82: b = ~b&(0x01);
   444  007F70  501E               	movf	main@b,w,c
   445  007F72  0AFF               	xorlw	255
   446  007F74  0B01               	andlw	1
   447  007F76  6E1E               	movwf	main@b,c
   448                           
   449                           ;main.c: 83: fbon = 1;
   450  007F78  6E16               	movwf	??_main& (0+255),c
   451  007F7A  0E01               	movlw	1
   452  007F7C  6E1C               	movwf	main@fbon,c
   453  007F7E  5016               	movf	??_main& (0+255),w,c
   454                           
   455                           ;main.c: 84: bot_tout = 100;;
   456  007F80  6E16               	movwf	??_main& (0+255),c
   457  007F82  0E64               	movlw	100
   458  007F84  6E22               	movwf	_bot_tout,c
   459  007F86  5016               	movf	??_main& (0+255),w,c
   460  007F88                     l803:
   461                           
   462                           ;main.c: 85: }
   463                           ;main.c: 86: if(PORTDbits.RD6 && fbon == 1 && !bot_tout){
   464  007F88  AC83               	btfss	3971,6,c	;volatile
   465  007F8A  D00D               	goto	l811
   466  007F8C  041C               	decf	main@fbon,w,c
   467  007F8E  A4D8               	btfss	status,2,c
   468  007F90  D00A               	goto	l811
   469  007F92  6622               	tstfsz	_bot_tout,c
   470  007F94  D008               	goto	l811
   471                           
   472                           ;main.c: 88: fbon=0;
   473  007F96  6E16               	movwf	??_main& (0+255),c
   474  007F98  0E00               	movlw	0
   475  007F9A  6E1C               	movwf	main@fbon,c
   476  007F9C  5016               	movf	??_main& (0+255),w,c
   477                           
   478                           ;main.c: 89: bot_tout = 100;;
   479  007F9E  6E16               	movwf	??_main& (0+255),c
   480  007FA0  0E64               	movlw	100
   481  007FA2  6E22               	movwf	_bot_tout,c
   482  007FA4  5016               	movf	??_main& (0+255),w,c
   483  007FA6                     l811:
   484                           
   485                           ;main.c: 90: }
   486                           ;main.c: 91: if(!PORTDbits.RD7 && fvel ==0 && !bot_tout){
   487  007FA6  BE83               	btfsc	3971,7,c	;volatile
   488  007FA8  D012               	goto	l823
   489  007FAA  661D               	tstfsz	main@fvel,c
   490  007FAC  D010               	goto	l823
   491  007FAE  6622               	tstfsz	_bot_tout,c
   492  007FB0  D00E               	goto	l823
   493                           
   494                           ;main.c: 92: velocidad = velocidad + 100;
   495  007FB2  0E64               	movlw	100
   496  007FB4  2418               	addwf	main@velocidad,w,c
   497  007FB6  6E18               	movwf	main@velocidad,c
   498  007FB8  0E00               	movlw	0
   499  007FBA  2019               	addwfc	main@velocidad+1,w,c
   500  007FBC  6E19               	movwf	main@velocidad+1,c
   501                           
   502                           ;main.c: 93: fvel = 1;
   503  007FBE  6E16               	movwf	??_main& (0+255),c
   504  007FC0  0E01               	movlw	1
   505  007FC2  6E1D               	movwf	main@fvel,c
   506  007FC4  5016               	movf	??_main& (0+255),w,c
   507                           
   508                           ;main.c: 94: bot_tout = 100;;
   509  007FC6  6E16               	movwf	??_main& (0+255),c
   510  007FC8  0E64               	movlw	100
   511  007FCA  6E22               	movwf	_bot_tout,c
   512  007FCC  5016               	movf	??_main& (0+255),w,c
   513  007FCE                     l823:
   514                           
   515                           ;main.c: 95: }
   516                           ;main.c: 96: if(PORTDbits.RD7 && fvel == 1 && !bot_tout){
   517  007FCE  AE83               	btfss	3971,7,c	;volatile
   518  007FD0  D00D               	goto	l831
   519  007FD2  041D               	decf	main@fvel,w,c
   520  007FD4  A4D8               	btfss	status,2,c
   521  007FD6  D00A               	goto	l831
   522  007FD8  6622               	tstfsz	_bot_tout,c
   523  007FDA  D008               	goto	l831
   524                           
   525                           ;main.c: 98: fvel=0;
   526  007FDC  6E16               	movwf	??_main& (0+255),c
   527  007FDE  0E00               	movlw	0
   528  007FE0  6E1D               	movwf	main@fvel,c
   529  007FE2  5016               	movf	??_main& (0+255),w,c
   530                           
   531                           ;main.c: 99: bot_tout = 100;;
   532  007FE4  6E16               	movwf	??_main& (0+255),c
   533  007FE6  0E64               	movlw	100
   534  007FE8  6E22               	movwf	_bot_tout,c
   535  007FEA  5016               	movf	??_main& (0+255),w,c
   536  007FEC                     l831:
   537                           
   538                           ;main.c: 100: }
   539                           ;main.c: 102: if(b == 0x01) leds(velocidad);
   540  007FEC  041E               	decf	main@b,w,c
   541  007FEE  A4D8               	btfss	status,2,c
   542  007FF0  D769               	goto	l745
   543  007FF2  C018  F00F         	movff	main@velocidad,leds@velocidad
   544  007FF6  C019  F010         	movff	main@velocidad+1,leds@velocidad+1
   545  007FFA  EC7D  F03E         	call	_leds	;wreg free
   546  007FFE  D762               	goto	l745
   547  008000                     __end_of_main:
   548                           	opt stack 0
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           intcon	equ	0xFF2
   554                           status	equ	0xFD8
   555                           
   556 ;; *************** function _timer_ini13 *****************
   557 ;; Defined at:
   558 ;;		line 34 in file "Ap_ini.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;		None               void
   565 ;; Registers used:
   566 ;;		wreg, status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    2
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text1
   587  007C08                     __ptext1:
   588                           	opt stack 0
   589  007C08                     _timer_ini13:
   590                           	opt stack 28
   591                           
   592                           ;Ap_ini.c: 35: T0CONbits.TMR0ON = 0;
   593                           
   594                           ;incstack = 0
   595  007C08  9ED5               	bcf	4053,7,c	;volatile
   596                           
   597                           ;Ap_ini.c: 36: T0CONbits.T08BIT = 1;
   598  007C0A  8CD5               	bsf	4053,6,c	;volatile
   599                           
   600                           ;Ap_ini.c: 37: T0CONbits.T0CS = 0;
   601  007C0C  9AD5               	bcf	4053,5,c	;volatile
   602                           
   603                           ;Ap_ini.c: 38: T0CONbits.PSA = 0;
   604  007C0E  96D5               	bcf	4053,3,c	;volatile
   605                           
   606                           ;Ap_ini.c: 39: T0CONbits.T0PS0 = 0;
   607  007C10  90D5               	bcf	4053,0,c	;volatile
   608                           
   609                           ;Ap_ini.c: 40: T0CONbits.T0PS1 = 1;
   610  007C12  82D5               	bsf	4053,1,c	;volatile
   611                           
   612                           ;Ap_ini.c: 41: T0CONbits.T0PS2 = 1;
   613  007C14  84D5               	bsf	4053,2,c	;volatile
   614                           
   615                           ;Ap_ini.c: 42: TMR0L = 0xD8;
   616  007C16  0ED8               	movlw	216
   617  007C18  6ED6               	movwf	4054,c	;volatile
   618                           
   619                           ;Ap_ini.c: 43: TMR0H = 0xFF;
   620  007C1A  68D7               	setf	4055,c	;volatile
   621                           
   622                           ;Ap_ini.c: 44: INTCONbits.TMR0IE = 1;
   623  007C1C  8AF2               	bsf	intcon,5,c	;volatile
   624  007C1E  0012               	return	
   625  007C20                     __end_of_timer_ini13:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           intcon	equ	0xFF2
   632                           status	equ	0xFD8
   633                           
   634 ;; *************** function _pic_ini13 *****************
   635 ;; Defined at:
   636 ;;		line 5 in file "Ap_ini.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;		None               void
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    2
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text2
   665  007C66                     __ptext2:
   666                           	opt stack 0
   667  007C66                     _pic_ini13:
   668                           	opt stack 28
   669                           
   670                           ;Ap_ini.c: 8: LATA = 0x00;
   671                           
   672                           ;incstack = 0
   673  007C66  0E00               	movlw	0
   674  007C68  6E89               	movwf	3977,c	;volatile
   675                           
   676                           ;Ap_ini.c: 9: LATB = 0x00;
   677  007C6A  0E00               	movlw	0
   678  007C6C  6E8A               	movwf	3978,c	;volatile
   679                           
   680                           ;Ap_ini.c: 10: LATC = 0x00;
   681  007C6E  0E00               	movlw	0
   682  007C70  6E8B               	movwf	3979,c	;volatile
   683                           
   684                           ;Ap_ini.c: 11: LATD = 0x00;
   685  007C72  0E00               	movlw	0
   686  007C74  6E8C               	movwf	3980,c	;volatile
   687                           
   688                           ;Ap_ini.c: 12: LATE = 0x00;
   689  007C76  0E00               	movlw	0
   690  007C78  6E8D               	movwf	3981,c	;volatile
   691                           
   692                           ;Ap_ini.c: 14: PORTA = 0x00;
   693  007C7A  0E00               	movlw	0
   694  007C7C  6E80               	movwf	3968,c	;volatile
   695                           
   696                           ;Ap_ini.c: 15: PORTB = 0x00;
   697  007C7E  0E00               	movlw	0
   698  007C80  6E81               	movwf	3969,c	;volatile
   699                           
   700                           ;Ap_ini.c: 16: PORTC = 0x00;
   701  007C82  0E00               	movlw	0
   702  007C84  6E82               	movwf	3970,c	;volatile
   703                           
   704                           ;Ap_ini.c: 17: PORTD = 0x00;
   705  007C86  0E00               	movlw	0
   706  007C88  6E83               	movwf	3971,c	;volatile
   707                           
   708                           ;Ap_ini.c: 18: PORTE = 0x00;
   709  007C8A  0E00               	movlw	0
   710  007C8C  6E84               	movwf	3972,c	;volatile
   711                           
   712                           ;Ap_ini.c: 22: TRISD = 0xF0;
   713  007C8E  0EF0               	movlw	240
   714  007C90  6E95               	movwf	3989,c	;volatile
   715                           
   716                           ;Ap_ini.c: 23: TRISCbits.RC6 = 0;
   717  007C92  9C94               	bcf	3988,6,c	;volatile
   718                           
   719                           ;Ap_ini.c: 24: TRISCbits.RC7 = 0;
   720  007C94  9E94               	bcf	3988,7,c	;volatile
   721                           
   722                           ;Ap_ini.c: 28: CMCON = 0x07;
   723  007C96  0E07               	movlw	7
   724  007C98  6EB4               	movwf	4020,c	;volatile
   725                           
   726                           ;Ap_ini.c: 29: ADCON1 = 0x0F;
   727  007C9A  0E0F               	movlw	15
   728  007C9C  6EC1               	movwf	4033,c	;volatile
   729                           
   730                           ;Ap_ini.c: 30: TRISA = 0xC0;
   731  007C9E  0EC0               	movlw	192
   732  007CA0  6E92               	movwf	3986,c	;volatile
   733                           
   734                           ;Ap_ini.c: 31: TRISE = 0x00;
   735  007CA2  0E00               	movlw	0
   736  007CA4  6E96               	movwf	3990,c	;volatile
   737  007CA6  0012               	return	
   738  007CA8                     __end_of_pic_ini13:
   739                           	opt stack 0
   740                           tblptru	equ	0xFF8
   741                           tblptrh	equ	0xFF7
   742                           tblptrl	equ	0xFF6
   743                           tablat	equ	0xFF5
   744                           intcon	equ	0xFF2
   745                           status	equ	0xFD8
   746                           
   747 ;; *************** function _leds *****************
   748 ;; Defined at:
   749 ;;		line 46 in file "Ap_ini.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  velocidad       2   14[COMRAM] unsigned int 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;		None               void
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   763 ;;      Params:         2       0       0       0       0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0
   765 ;;      Temps:          1       0       0       0       0       0       0       0       0
   766 ;;      Totals:         3       0       0       0       0       0       0       0       0
   767 ;;Total ram usage:        3 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    2
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text3
   778  007CFA                     __ptext3:
   779                           	opt stack 0
   780  007CFA                     _leds:
   781                           	opt stack 28
   782                           
   783                           ;Ap_ini.c: 47: static unsigned char i=1;
   784                           ;Ap_ini.c: 50: switch(i){
   785                           
   786                           ;incstack = 0
   787  007CFA  D026               	goto	l909
   788  007CFC                     l881:
   789  007CFC  5021               	movf	_led_tout+1,w,c
   790  007CFE  1020               	iorwf	_led_tout,w,c
   791  007D00  A4D8               	btfss	status,2,c
   792  007D02  D030               	goto	l123
   793                           
   794                           ;Ap_ini.c: 52: LATDbits.LD2=~LATDbits.LD2;
   795  007D04  748C               	btg	3980,2,c	;volatile
   796  007D06  D011               	goto	L3
   797  007D08                     l887:
   798  007D08  5021               	movf	_led_tout+1,w,c
   799  007D0A  1020               	iorwf	_led_tout,w,c
   800  007D0C  A4D8               	btfss	status,2,c
   801  007D0E  D02A               	goto	l123
   802                           
   803                           ;Ap_ini.c: 58: LATDbits.LD3=~LATDbits.LD3;
   804  007D10  768C               	btg	3980,3,c	;volatile
   805  007D12  D00B               	goto	L3
   806  007D14                     l893:
   807  007D14  5021               	movf	_led_tout+1,w,c
   808  007D16  1020               	iorwf	_led_tout,w,c
   809  007D18  A4D8               	btfss	status,2,c
   810  007D1A  D024               	goto	l123
   811                           
   812                           ;Ap_ini.c: 64: LATCbits.LC6=~LATCbits.LC6;
   813  007D1C  7C8B               	btg	3979,6,c	;volatile
   814  007D1E  D005               	goto	L3
   815  007D20                     l899:
   816  007D20  5021               	movf	_led_tout+1,w,c
   817  007D22  1020               	iorwf	_led_tout,w,c
   818  007D24  A4D8               	btfss	status,2,c
   819  007D26  D01E               	goto	l123
   820                           
   821                           ;Ap_ini.c: 70: LATCbits.LC7=~LATCbits.LC7;
   822  007D28  7E8B               	btg	3979,7,c	;volatile
   823  007D2A                     L3:
   824                           
   825                           ;Ap_ini.c: 71: led_tout = velocidad;
   826  007D2A  C00F  F020         	movff	leds@velocidad,_led_tout
   827  007D2E  C010  F021         	movff	leds@velocidad+1,_led_tout+1
   828                           
   829                           ;Ap_ini.c: 72: i++;
   830  007D32  2A25               	incf	leds@i,f,c
   831  007D34  D017               	goto	l123
   832  007D36                     l905:
   833                           
   834                           ;Ap_ini.c: 76: led_tout = 1000;
   835  007D36  0E03               	movlw	3
   836  007D38  6E21               	movwf	_led_tout+1,c
   837  007D3A  0EE8               	movlw	232
   838  007D3C  6E20               	movwf	_led_tout,c
   839                           
   840                           ;Ap_ini.c: 77: i=1;
   841  007D3E  6E11               	movwf	??_leds& (0+255),c
   842  007D40  0E01               	movlw	1
   843  007D42  6E25               	movwf	leds@i,c
   844  007D44  5011               	movf	??_leds& (0+255),w,c
   845                           
   846                           ;Ap_ini.c: 78: }
   847                           ;Ap_ini.c: 80: }
   848  007D46  D00E               	goto	l123
   849  007D48                     l909:
   850  007D48  5025               	movf	leds@i,w,c
   851                           
   852                           ; Switch size 1, requested type "space"
   853                           ; Number of cases is 4, Range of values is 1 to 4
   854                           ; switch strategies available:
   855                           ; Name         Instructions Cycles
   856                           ; simple_byte           13     7 (average)
   857                           ;	Chosen strategy is simple_byte
   858  007D4A  0A01               	xorlw	1	; case 1
   859  007D4C  B4D8               	btfsc	status,2,c
   860  007D4E  D7D6               	goto	l881
   861  007D50  0A03               	xorlw	3	; case 2
   862  007D52  B4D8               	btfsc	status,2,c
   863  007D54  D7D9               	goto	l887
   864  007D56  0A01               	xorlw	1	; case 3
   865  007D58  B4D8               	btfsc	status,2,c
   866  007D5A  D7DC               	goto	l893
   867  007D5C  0A07               	xorlw	7	; case 4
   868  007D5E  B4D8               	btfsc	status,2,c
   869  007D60  D7DF               	goto	l899
   870  007D62  D7E9               	goto	l905
   871  007D64                     l123:
   872  007D64  0012               	return	
   873  007D66                     __end_of_leds:
   874                           	opt stack 0
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           intcon	equ	0xFF2
   880                           status	equ	0xFD8
   881                           
   882 ;; *************** function _Send_4Disp *****************
   883 ;; Defined at:
   884 ;;		line 114 in file "Ap_ini.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;  Umil            1    wreg     unsigned char 
   887 ;;  Cent            1   16[COMRAM] unsigned char 
   888 ;;  Dec             1   17[COMRAM] unsigned char 
   889 ;;  Uni             1   18[COMRAM] unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  Umil            1   20[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         3       0       0       0       0       0       0       0       0
   902 ;;      Locals:         1       0       0       0       0       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0       0       0       0       0
   904 ;;      Totals:         5       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        5 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    3
   908 ;; This function calls:
   909 ;;		_Send_Disp
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text4
   916  007DE2                     __ptext4:
   917                           	opt stack 0
   918  007DE2                     _Send_4Disp:
   919                           	opt stack 27
   920                           
   921                           ;incstack = 0
   922                           ;Send_4Disp@Umil stored from wreg
   923  007DE2  CFE8 F015          	movff	wreg,Send_4Disp@Umil
   924                           
   925                           ;Ap_ini.c: 116: static unsigned char Nro_Disp=1;
   926                           ;Ap_ini.c: 118: switch(Nro_Disp){
   927  007DE6  D03C               	goto	l877
   928  007DE8                     l139:
   929                           
   930                           ;Ap_ini.c: 120: if(!mux_tout){
   931  007DE8  6623               	tstfsz	_mux_tout,c
   932  007DEA  D048               	goto	l149
   933                           
   934                           ;Ap_ini.c: 121: Send_Disp(1,Umil);
   935  007DEC  C015  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
   936  007DF0  0E01               	movlw	1
   937  007DF2  EC54  F03E         	call	_Send_Disp
   938                           
   939                           ;Ap_ini.c: 122: mux_tout = 10;;
   940  007DF6  6E14               	movwf	??_Send_4Disp& (0+255),c
   941  007DF8  0E0A               	movlw	10
   942  007DFA  6E23               	movwf	_mux_tout,c
   943  007DFC  5014               	movf	??_Send_4Disp& (0+255),w,c
   944                           
   945                           ;Ap_ini.c: 123: Nro_Disp = 2;
   946  007DFE  6E14               	movwf	??_Send_4Disp& (0+255),c
   947  007E00  0E02               	movlw	2
   948  007E02  D024               	goto	L6
   949  007E04                     l142:
   950                           
   951                           ;Ap_ini.c: 128: if(!mux_tout){
   952  007E04  6623               	tstfsz	_mux_tout,c
   953  007E06  D03A               	goto	l149
   954                           
   955                           ;Ap_ini.c: 129: Send_Disp(2,Cent);
   956  007E08  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
   957  007E0C  0E02               	movlw	2
   958  007E0E  EC54  F03E         	call	_Send_Disp
   959                           
   960                           ;Ap_ini.c: 130: mux_tout = 10;;
   961  007E12  6E14               	movwf	??_Send_4Disp& (0+255),c
   962  007E14  0E0A               	movlw	10
   963  007E16  6E23               	movwf	_mux_tout,c
   964  007E18  5014               	movf	??_Send_4Disp& (0+255),w,c
   965                           
   966                           ;Ap_ini.c: 131: Nro_Disp = 3;
   967  007E1A  6E14               	movwf	??_Send_4Disp& (0+255),c
   968  007E1C  0E03               	movlw	3
   969  007E1E  D016               	goto	L6
   970  007E20                     l144:
   971                           
   972                           ;Ap_ini.c: 136: if(!mux_tout){
   973  007E20  6623               	tstfsz	_mux_tout,c
   974  007E22  D02C               	goto	l149
   975                           
   976                           ;Ap_ini.c: 137: Send_Disp(3,Dec);
   977  007E24  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
   978  007E28  0E03               	movlw	3
   979  007E2A  EC54  F03E         	call	_Send_Disp
   980                           
   981                           ;Ap_ini.c: 138: mux_tout = 10;;
   982  007E2E  6E14               	movwf	??_Send_4Disp& (0+255),c
   983  007E30  0E0A               	movlw	10
   984  007E32  6E23               	movwf	_mux_tout,c
   985  007E34  5014               	movf	??_Send_4Disp& (0+255),w,c
   986                           
   987                           ;Ap_ini.c: 139: Nro_Disp = 4;
   988  007E36  6E14               	movwf	??_Send_4Disp& (0+255),c
   989  007E38  0E04               	movlw	4
   990  007E3A  D008               	goto	L6
   991  007E3C                     l146:
   992                           
   993                           ;Ap_ini.c: 144: if(!mux_tout){
   994  007E3C  6623               	tstfsz	_mux_tout,c
   995  007E3E  D01E               	goto	l149
   996                           
   997                           ;Ap_ini.c: 145: Send_Disp(4,Uni);
   998  007E40  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
   999  007E44  0E04               	movlw	4
  1000  007E46  EC54  F03E         	call	_Send_Disp
  1001  007E4A  D003               	goto	l875
  1002  007E4C                     L6:
  1003  007E4C  6E24               	movwf	Send_4Disp@Nro_Disp,c
  1004  007E4E  5014               	movf	??_Send_4Disp& (0+255),w,c
  1005  007E50  D015               	goto	l149
  1006  007E52                     l875:
  1007                           
  1008                           ;Ap_ini.c: 152: mux_tout = 10;;
  1009  007E52  6E14               	movwf	??_Send_4Disp& (0+255),c
  1010  007E54  0E0A               	movlw	10
  1011  007E56  6E23               	movwf	_mux_tout,c
  1012  007E58  5014               	movf	??_Send_4Disp& (0+255),w,c
  1013                           
  1014                           ;Ap_ini.c: 153: Nro_Disp = 1;
  1015  007E5A  6E14               	movwf	??_Send_4Disp& (0+255),c
  1016  007E5C  0E01               	movlw	1
  1017  007E5E  D7F6               	goto	L6
  1018  007E60                     l877:
  1019  007E60  5024               	movf	Send_4Disp@Nro_Disp,w,c
  1020                           
  1021                           ; Switch size 1, requested type "space"
  1022                           ; Number of cases is 4, Range of values is 1 to 4
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte           13     7 (average)
  1026                           ;	Chosen strategy is simple_byte
  1027  007E62  0A01               	xorlw	1	; case 1
  1028  007E64  B4D8               	btfsc	status,2,c
  1029  007E66  D7C0               	goto	l139
  1030  007E68  0A03               	xorlw	3	; case 2
  1031  007E6A  B4D8               	btfsc	status,2,c
  1032  007E6C  D7CB               	goto	l142
  1033  007E6E  0A01               	xorlw	1	; case 3
  1034  007E70  B4D8               	btfsc	status,2,c
  1035  007E72  D7D6               	goto	l144
  1036  007E74  0A07               	xorlw	7	; case 4
  1037  007E76  B4D8               	btfsc	status,2,c
  1038  007E78  D7E1               	goto	l146
  1039  007E7A  D7EB               	goto	l875
  1040  007E7C                     l149:
  1041  007E7C  0012               	return	
  1042  007E7E                     __end_of_Send_4Disp:
  1043                           	opt stack 0
  1044                           tblptru	equ	0xFF8
  1045                           tblptrh	equ	0xFF7
  1046                           tblptrl	equ	0xFF6
  1047                           tablat	equ	0xFF5
  1048                           intcon	equ	0xFF2
  1049                           wreg	equ	0xFE8
  1050                           status	equ	0xFD8
  1051                           
  1052 ;; *************** function _Send_Disp *****************
  1053 ;; Defined at:
  1054 ;;		line 83 in file "Ap_ini.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  NroDisp         1    wreg     unsigned char 
  1057 ;;  Dato            1   14[COMRAM] unsigned char 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;		None               void
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1069 ;;      Params:         1       0       0       0       0       0       0       0       0
  1070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1072 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1073 ;;Total ram usage:        2 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_Send_4Disp
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text5
  1084  007CA8                     __ptext5:
  1085                           	opt stack 0
  1086  007CA8                     _Send_Disp:
  1087                           	opt stack 27
  1088                           
  1089                           ;incstack = 0
  1090                           ;Send_Disp@NroDisp stored from wreg
  1091  007CA8  CFE8 F010          	movff	wreg,Send_Disp@NroDisp
  1092                           
  1093                           ;Ap_ini.c: 85: LATA = 0;
  1094  007CAC  0E00               	movlw	0
  1095  007CAE  6E89               	movwf	3977,c	;volatile
  1096                           
  1097                           ;Ap_ini.c: 87: LATAbits.LA4 = 0;
  1098  007CB0  9889               	bcf	3977,4,c	;volatile
  1099                           
  1100                           ;Ap_ini.c: 88: LATAbits.LA5 = 0;
  1101  007CB2  9A89               	bcf	3977,5,c	;volatile
  1102                           
  1103                           ;Ap_ini.c: 89: LATEbits.LATE0 = 0;
  1104  007CB4  908D               	bcf	3981,0,c	;volatile
  1105                           
  1106                           ;Ap_ini.c: 90: LATEbits.LATE1 = 0;
  1107  007CB6  928D               	bcf	3981,1,c	;volatile
  1108                           
  1109                           ;Ap_ini.c: 92: switch(NroDisp){
  1110  007CB8  D008               	goto	l935
  1111  007CBA                     l129:
  1112                           
  1113                           ;Ap_ini.c: 97: LATAbits.LA5 = 1;
  1114  007CBA  8A89               	bsf	3977,5,c	;volatile
  1115                           
  1116                           ;Ap_ini.c: 98: }break;
  1117  007CBC  D014               	goto	l937
  1118  007CBE                     l130:
  1119                           
  1120                           ;Ap_ini.c: 100: LATEbits.LATE0 = 1;
  1121  007CBE  808D               	bsf	3981,0,c	;volatile
  1122                           
  1123                           ;Ap_ini.c: 101: }break;
  1124  007CC0  D012               	goto	l937
  1125  007CC2                     l131:
  1126                           
  1127                           ;Ap_ini.c: 103: LATEbits.LATE1 = 1;
  1128  007CC2  828D               	bsf	3981,1,c	;volatile
  1129                           
  1130                           ;Ap_ini.c: 104: }break;
  1131  007CC4  D010               	goto	l937
  1132  007CC6                     l132:
  1133                           
  1134                           ;Ap_ini.c: 106: LATAbits.LA4 = 1;
  1135  007CC6  8889               	bsf	3977,4,c	;volatile
  1136                           
  1137                           ;Ap_ini.c: 107: }break;
  1138  007CC8  D00E               	goto	l937
  1139  007CCA                     l935:
  1140  007CCA  5010               	movf	Send_Disp@NroDisp,w,c
  1141                           
  1142                           ; Switch size 1, requested type "space"
  1143                           ; Number of cases is 4, Range of values is 1 to 4
  1144                           ; switch strategies available:
  1145                           ; Name         Instructions Cycles
  1146                           ; simple_byte           13     7 (average)
  1147                           ;	Chosen strategy is simple_byte
  1148  007CCC  0A01               	xorlw	1	; case 1
  1149  007CCE  B4D8               	btfsc	status,2,c
  1150  007CD0  D7FA               	goto	l132
  1151  007CD2  0A03               	xorlw	3	; case 2
  1152  007CD4  B4D8               	btfsc	status,2,c
  1153  007CD6  D7F1               	goto	l129
  1154  007CD8  0A01               	xorlw	1	; case 3
  1155  007CDA  B4D8               	btfsc	status,2,c
  1156  007CDC  D7F0               	goto	l130
  1157  007CDE  0A07               	xorlw	7	; case 4
  1158  007CE0  B4D8               	btfsc	status,2,c
  1159  007CE2  D7EF               	goto	l131
  1160  007CE4  D7F0               	goto	l132
  1161  007CE6                     l937:
  1162                           
  1163                           ;Ap_ini.c: 109: Dato = Dato & 0x0F;
  1164  007CE6  500F               	movf	Send_Disp@Dato,w,c
  1165  007CE8  0B0F               	andlw	15
  1166  007CEA  6E0F               	movwf	Send_Disp@Dato,c
  1167                           
  1168                           ;Ap_ini.c: 110: LATA = LATA & 0xF0;
  1169  007CEC  5089               	movf	3977,w,c	;volatile
  1170  007CEE  0BF0               	andlw	240
  1171  007CF0  6E89               	movwf	3977,c	;volatile
  1172                           
  1173                           ;Ap_ini.c: 111: LATA = LATA | Dato;
  1174  007CF2  5089               	movf	3977,w,c	;volatile
  1175  007CF4  100F               	iorwf	Send_Disp@Dato,w,c
  1176  007CF6  6E89               	movwf	3977,c	;volatile
  1177  007CF8  0012               	return	
  1178  007CFA                     __end_of_Send_Disp:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           intcon	equ	0xFF2
  1185                           wreg	equ	0xFE8
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _myISR *****************
  1189 ;; Defined at:
  1190 ;;		line 110 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;		None               void
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1206 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1207 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:       14 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    1
  1211 ;; This function calls:
  1212 ;;		_tic_timer0
  1213 ;; This function is called by:
  1214 ;;		Interrupt level 2
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	intcode
  1219  002008                     __pintcode:
  1220                           	opt stack 0
  1221  002008                     _myISR:
  1222                           	opt stack 27
  1223                           
  1224                           ;incstack = 0
  1225  002008  CFFA F001          	movff	pclath,??_myISR
  1226  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  1227  002010  EDB3  F03E         	call	int_func,f	;refresh shadow registers
  1228                           pclatu	equ	0xFFB
  1229                           pclath	equ	0xFFA
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           intcon	equ	0xFF2
  1235                           wreg	equ	0xFE8
  1236                           status	equ	0xFD8
  1237                           
  1238                           	psect	intcode_body
  1239  007D66                     __pintcode_body:
  1240                           	opt stack 27
  1241  007D66                     int_func:
  1242                           	opt stack 27
  1243  007D66  0006               	pop		; remove dummy address from shadow register refresh
  1244  007D68  CFE9 F003          	movff	fsr0l,??_myISR+2
  1245  007D6C  CFEA F004          	movff	fsr0h,??_myISR+3
  1246  007D70  CFE1 F005          	movff	fsr1l,??_myISR+4
  1247  007D74  CFE2 F006          	movff	fsr1h,??_myISR+5
  1248  007D78  CFD9 F007          	movff	fsr2l,??_myISR+6
  1249  007D7C  CFDA F008          	movff	fsr2h,??_myISR+7
  1250  007D80  CFF3 F009          	movff	prodl,??_myISR+8
  1251  007D84  CFF4 F00A          	movff	prodh,??_myISR+9
  1252  007D88  CFF6 F00B          	movff	tblptrl,??_myISR+10
  1253  007D8C  CFF7 F00C          	movff	tblptrh,??_myISR+11
  1254  007D90  CFF8 F00D          	movff	tblptru,??_myISR+12
  1255  007D94  CFF5 F00E          	movff	tablat,??_myISR+13
  1256                           
  1257                           ;main.c: 118: if(TMR0IF){
  1258  007D98  A4F2               	btfss	intcon,2,c	;volatile
  1259  007D9A  D006               	goto	i2l47
  1260                           
  1261                           ;main.c: 119: INTCONbits.TMR0IF = 0;
  1262  007D9C  94F2               	bcf	intcon,2,c	;volatile
  1263                           
  1264                           ;main.c: 120: TMR0L = 0xD9;
  1265  007D9E  0ED9               	movlw	217
  1266  007DA0  6ED6               	movwf	4054,c	;volatile
  1267                           
  1268                           ;main.c: 121: TMR0H = 0xFF;
  1269  007DA2  68D7               	setf	4055,c	;volatile
  1270                           
  1271                           ;main.c: 122: tic_timer0();
  1272  007DA4  EC10  F03E         	call	_tic_timer0	;wreg free
  1273  007DA8                     i2l47:
  1274  007DA8  C00E  FFF5         	movff	??_myISR+13,tablat
  1275  007DAC  C00D  FFF8         	movff	??_myISR+12,tblptru
  1276  007DB0  C00C  FFF7         	movff	??_myISR+11,tblptrh
  1277  007DB4  C00B  FFF6         	movff	??_myISR+10,tblptrl
  1278  007DB8  C00A  FFF4         	movff	??_myISR+9,prodh
  1279  007DBC  C009  FFF3         	movff	??_myISR+8,prodl
  1280  007DC0  C008  FFDA         	movff	??_myISR+7,fsr2h
  1281  007DC4  C007  FFD9         	movff	??_myISR+6,fsr2l
  1282  007DC8  C006  FFE2         	movff	??_myISR+5,fsr1h
  1283  007DCC  C005  FFE1         	movff	??_myISR+4,fsr1l
  1284  007DD0  C004  FFEA         	movff	??_myISR+3,fsr0h
  1285  007DD4  C003  FFE9         	movff	??_myISR+2,fsr0l
  1286  007DD8  C002  FFFB         	movff	??_myISR+1,pclatu
  1287  007DDC  C001  FFFA         	movff	??_myISR,pclath
  1288  007DE0  0011               	retfie		f
  1289  007DE2                     __end_of_myISR:
  1290                           	opt stack 0
  1291                           pclatu	equ	0xFFB
  1292                           pclath	equ	0xFFA
  1293                           tblptru	equ	0xFF8
  1294                           tblptrh	equ	0xFF7
  1295                           tblptrl	equ	0xFF6
  1296                           tablat	equ	0xFF5
  1297                           prodh	equ	0xFF4
  1298                           prodl	equ	0xFF3
  1299                           intcon	equ	0xFF2
  1300                           fsr0h	equ	0xFEA
  1301                           fsr0l	equ	0xFE9
  1302                           wreg	equ	0xFE8
  1303                           fsr1h	equ	0xFE2
  1304                           fsr1l	equ	0xFE1
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _tic_timer0 *****************
  1310 ;; Defined at:
  1311 ;;		line 157 in file "Ap_ini.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_myISR
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text7
  1339  007C20                     __ptext7:
  1340                           	opt stack 0
  1341  007C20                     _tic_timer0:
  1342                           	opt stack 27
  1343                           
  1344                           ;Ap_ini.c: 158: if(mux_tout)mux_tout--;
  1345                           
  1346                           ;incstack = 0
  1347  007C20  5023               	movf	_mux_tout,w,c
  1348  007C22  A4D8               	btfss	status,2,c
  1349  007C24  0623               	decf	_mux_tout,f,c
  1350                           
  1351                           ;Ap_ini.c: 159: if(bot_tout)bot_tout--;
  1352  007C26  5022               	movf	_bot_tout,w,c
  1353  007C28  A4D8               	btfss	status,2,c
  1354  007C2A  0622               	decf	_bot_tout,f,c
  1355                           
  1356                           ;Ap_ini.c: 160: if(led_tout)led_tout--;
  1357  007C2C  5021               	movf	_led_tout+1,w,c
  1358  007C2E  1020               	iorwf	_led_tout,w,c
  1359  007C30  B4D8               	btfsc	status,2,c
  1360  007C32  D003               	goto	i2l155
  1361  007C34  0620               	decf	_led_tout,f,c
  1362  007C36  A0D8               	btfss	status,0,c
  1363  007C38  0621               	decf	_led_tout+1,f,c
  1364  007C3A                     i2l155:
  1365  007C3A  0012               	return	
  1366  007C3C                     __end_of_tic_timer0:
  1367                           	opt stack 0
  1368  0000                     pclatu	equ	0xFFB
  1369                           pclath	equ	0xFFA
  1370                           tblptru	equ	0xFF8
  1371                           tblptrh	equ	0xFF7
  1372                           tblptrl	equ	0xFF6
  1373                           tablat	equ	0xFF5
  1374                           prodh	equ	0xFF4
  1375                           prodl	equ	0xFF3
  1376                           intcon	equ	0xFF2
  1377                           fsr0h	equ	0xFEA
  1378                           fsr0l	equ	0xFE9
  1379                           wreg	equ	0xFE8
  1380                           fsr1h	equ	0xFE2
  1381                           fsr1l	equ	0xFE1
  1382                           fsr2h	equ	0xFDA
  1383                           fsr2l	equ	0xFD9
  1384                           status	equ	0xFD8
  1385                           pclatu	equ	0xFFB
  1386                           pclath	equ	0xFFA
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           intcon	equ	0xFF2
  1394                           fsr0h	equ	0xFEA
  1395                           fsr0l	equ	0xFE9
  1396                           wreg	equ	0xFE8
  1397                           fsr1h	equ	0xFE2
  1398                           fsr1l	equ	0xFE1
  1399                           fsr2h	equ	0xFDA
  1400                           fsr2l	equ	0xFD9
  1401                           status	equ	0xFD8
  1402                           
  1403                           	psect	rparam
  1404  0000                     pclatu	equ	0xFFB
  1405                           pclath	equ	0xFFA
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           intcon	equ	0xFF2
  1413                           fsr0h	equ	0xFEA
  1414                           fsr0l	equ	0xFE9
  1415                           wreg	equ	0xFE8
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_4Disp
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     677
                                             21 COMRAM    10    10      0
                         _Send_4Disp
                               _leds
                          _pic_ini13
                        _timer_ini13
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leds                                                 3     1      2      94
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           5     2      3     343
                                             16 COMRAM     5     2      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     181
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   _leds
   _pic_ini13
   _timer_ini13

 _myISR (ROOT)
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      25       1       38.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      20        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat May 10 13:21:41 2014

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l130 7CBE                      l131 7CC2  
                    l123 7D64                      l132 7CC6                      l142 7E04  
                    l144 7E20                      l129 7CBA                      l146 7E3C  
                    l139 7DE8                      l149 7E7C                      l811 7FA6  
                    l803 7F88                      l831 7FEC                      l823 7FCE  
                    l905 7D36                      l761 7F04                      l745 7EC4  
                    l909 7D48                      l935 7CCA                      l791 7F64  
                    l783 7F46                      l937 7CE6                      l881 7CFC  
                    l769 7F22                      l875 7E52                      l877 7E60  
                    l893 7D14                      l887 7D08                      l899 7D20  
           __CFG_CPB$OFF 000000                      wreg 000FE8            Send_Disp@Dato 000F  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     i2l47 7DA8                     _main 7E7E  
                   _leds 7CFA                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 2014            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000                    ?_main 0001  
                  ?_leds 000F                    _CMCON 000FB4                    i2l155 7C3A  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000           __CFG_EBTRB$OFF 000000                    _myISR 2008  
                  main@a 001F                    main@b 001E                    leds@i 0025  
                  tablat 000FF5                    status 000FD8          __initialization 7C3C  
           __end_of_main 8000             __end_of_leds 7D66                   ??_main 0016  
                 ??_leds 0011            __activetblptr 000002               _Send_4Disp 7DE2  
                 _ADCON1 000FC1                   ?_myISR 0001                   _TMR0IF 007F92  
         __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000       __size_of_Send_Disp 0052  
         __CFG_STVREN$ON 000000            main@velocidad 0018             __pdataCOMRAM 0024  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ?_timer_ini13 0001               __accesstop 0060  __end_of__initialization 7C5C  
        __CFG_PBADEN$OFF 000000         Send_Disp@NroDisp 0010           __pcstackCOMRAM 0001  
          __end_of_myISR 7DE2            leds@velocidad 000F              ?_Send_4Disp 0011  
                ??_myISR 0001        __end_of_Send_Disp 7CFA       __size_of_pic_ini13 0042  
     Send_4Disp@Nro_Disp 0024                  __Hparam 0000                  __Lparam 0000  
    __size_of_Send_4Disp 009C                  __pcinit 7C3C                  __ramtop 0800  
                __ptext0 7E7E                  __ptext1 7C08                  __ptext2 7C66  
                __ptext3 7CFA                  __ptext4 7DE2                  __ptext5 7CA8  
                __ptext7 7C20                _T0CONbits 000FD5        __end_of_pic_ini13 7CA8  
         __pintcode_body 7D66     __size_of_timer_ini13 0018     end_of_initialization 7C5C  
          __Lmediumconst 0000                  int_func 7D66               _tic_timer0 7C20  
              _PORTDbits 000F83                _TRISCbits 000F94            __pidataCOMRAM 2004  
           ??_Send_4Disp 0014      start_initialization 7C3C                _Send_Disp 7CA8  
            ?_tic_timer0 0001       __end_of_Send_4Disp 7E7E         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0020               ?_Send_Disp 000F                __pintcode 2008  
    __size_of_tic_timer0 001C           __size_of_myISR 5DDA                _pic_ini13 7C66  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
               _LATEbits 000F8D         __CFG_WDTPS$32768 000000                main@faoff 001B  
          ??_timer_ini13 000F           Send_4Disp@Cent 0011           Send_4Disp@Umil 0015  
             ?_pic_ini13 0001              ??_Send_Disp 0010                 __Hrparam 0000  
               __Lrparam 0000                 _bot_tout 0022                 _led_tout 0020  
    __end_of_timer_ini13 7C20            __size_of_main 0182            __size_of_leds 006C  
           ??_tic_timer0 0001                 _mux_tout 0023                 main@faon 001A  
               main@fbon 001C                 main@fvel 001D            Send_4Disp@Dec 0012  
          Send_4Disp@Uni 0013    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
     __end_of_tic_timer0 7C3C              ??_pic_ini13 000F                 intlevel2 0000  
            _timer_ini13 7C08       __CFG_FOSC$HSPLL_HS 000000  
