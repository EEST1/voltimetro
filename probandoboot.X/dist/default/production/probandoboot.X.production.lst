

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu May 22 20:57:02 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  002004                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for Send_4Disp@Nro_Disp
    27  002004  01                 	db	1
    28                           
    29                           ;initializer for leds@i
    30  002005  01                 	db	1
    31  0000                     _ADCON1	set	4033
    32  0000                     _CMCON	set	4020
    33  0000                     _INTCONbits	set	4082
    34  0000                     _LATA	set	3977
    35  0000                     _LATAbits	set	3977
    36  0000                     _LATB	set	3978
    37  0000                     _LATC	set	3979
    38  0000                     _LATCbits	set	3979
    39  0000                     _LATD	set	3980
    40  0000                     _LATDbits	set	3980
    41  0000                     _LATE	set	3981
    42  0000                     _LATEbits	set	3981
    43  0000                     _PORTA	set	3968
    44  0000                     _PORTB	set	3969
    45  0000                     _PORTBbits	set	3969
    46  0000                     _PORTC	set	3970
    47  0000                     _PORTD	set	3971
    48  0000                     _PORTDbits	set	3971
    49  0000                     _PORTE	set	3972
    50  0000                     _T0CONbits	set	4053
    51  0000                     _TMR0H	set	4055
    52  0000                     _TMR0L	set	4054
    53  0000                     _TRISA	set	3986
    54  0000                     _TRISB	set	3987
    55  0000                     _TRISCbits	set	3988
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISE	set	3990
    58  0000                     _TMR0IF	set	32658
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  007C26                     __pcinit:
    64                           	opt stack 0
    65  007C26                     start_initialization:
    66                           	opt stack 0
    67  007C26                     __initialization:
    68                           	opt stack 0
    69                           
    70                           ; Clear objects allocated to COMRAM (4 bytes)
    71  007C26  6A23               	clrf	(__pbssCOMRAM+3)& (0+255),c
    72  007C28  6A22               	clrf	(__pbssCOMRAM+2)& (0+255),c
    73  007C2A  6A21               	clrf	(__pbssCOMRAM+1)& (0+255),c
    74  007C2C  6A20               	clrf	__pbssCOMRAM& (0+255),c
    75                           
    76                           ; Initialize objects allocated to COMRAM (2 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78  007C2E  0E04               	movlw	low __pidataCOMRAM
    79  007C30  6EF6               	movwf	tblptrl,c
    80  007C32  0E20               	movlw	high __pidataCOMRAM
    81  007C34  6EF7               	movwf	tblptrh,c
    82  007C36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    83  007C38  6EF8               	movwf	tblptru,c
    84  007C3A  0009               	tblrd		*+	;fetch initializer
    85  007C3C  CFF5 F024          	movff	tablat,__pdataCOMRAM
    86  007C40  0009               	tblrd		*+	;fetch initializer
    87  007C42  CFF5 F025          	movff	tablat,__pdataCOMRAM+1
    88  007C46                     end_of_initialization:
    89                           	opt stack 0
    90  007C46                     __end_of__initialization:
    91                           	opt stack 0
    92  007C46  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  007C48  6EF8               	movwf	tblptru,c
    94  007C4A  0100               	movlb	0
    95  007C4C  EF39  F03F         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           tblptrh	equ	0xFF7
    98                           tblptrl	equ	0xFF6
    99                           tablat	equ	0xFF5
   100                           
   101                           	psect	bssCOMRAM
   102  000020                     __pbssCOMRAM:
   103                           	opt stack 0
   104  000020                     _led_tout:
   105                           	opt stack 0
   106  000020                     	ds	2
   107  000022                     _bot_tout:
   108                           	opt stack 0
   109  000022                     	ds	1
   110  000023                     _mux_tout:
   111                           	opt stack 0
   112  000023                     	ds	1
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           
   118                           	psect	dataCOMRAM
   119  000024                     __pdataCOMRAM:
   120                           	opt stack 0
   121  000024                     Send_4Disp@Nro_Disp:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     leds@i:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	opt stack 0
   135  000001                     ??_myISR:
   136                           
   137                           ; 0 bytes @ 0x0
   138  000001                     	ds	14
   139  00000F                     Send_Disp@Dato:
   140                           	opt stack 0
   141  00000F                     leds@velocidad:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0xE
   145  00000F                     	ds	1
   146  000010                     Send_Disp@NroDisp:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0xF
   150  000010                     	ds	1
   151  000011                     ??_leds:
   152  000011                     Send_4Disp@Cent:
   153                           	opt stack 0
   154                           
   155                           ; 1 bytes @ 0x10
   156  000011                     	ds	1
   157  000012                     Send_4Disp@Dec:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x11
   161  000012                     	ds	1
   162  000013                     Send_4Disp@Uni:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x12
   166  000013                     	ds	1
   167  000014                     ??_Send_4Disp:
   168                           
   169                           ; 0 bytes @ 0x13
   170  000014                     	ds	1
   171  000015                     Send_4Disp@Umil:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x14
   175  000015                     	ds	1
   176  000016                     ??_main:
   177                           
   178                           ; 0 bytes @ 0x15
   179  000016                     	ds	2
   180  000018                     main@velocidad:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x17
   184  000018                     	ds	2
   185  00001A                     main@faon:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x19
   189  00001A                     	ds	1
   190  00001B                     main@faoff:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x1A
   194  00001B                     	ds	1
   195  00001C                     main@fbon:
   196                           	opt stack 0
   197                           
   198                           ; 1 bytes @ 0x1B
   199  00001C                     	ds	1
   200  00001D                     main@fvel:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x1C
   204  00001D                     	ds	1
   205  00001E                     main@b:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x1D
   209  00001E                     	ds	1
   210  00001F                     main@a:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x1E
   214  00001F                     	ds	1
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 30 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  velocidad       2   23[COMRAM] unsigned int 
   230 ;;  a               1   30[COMRAM] unsigned char 
   231 ;;  b               1   29[COMRAM] unsigned char 
   232 ;;  fvel            1   28[COMRAM] unsigned char 
   233 ;;  fbon            1   27[COMRAM] unsigned char 
   234 ;;  faoff           1   26[COMRAM] unsigned char 
   235 ;;  faon            1   25[COMRAM] unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;		None               void
   238 ;; Registers used:
   239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         8       0       0       0       0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0       0       0       0       0
   248 ;;      Totals:        10       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:       10 bytes
   250 ;; Hardware stack levels required when called:    4
   251 ;; This function calls:
   252 ;;		_Send_4Disp
   253 ;;		_leds
   254 ;;		_pic_ini13
   255 ;;		_timer_ini13
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  007E72                     __ptext0:
   263                           	opt stack 0
   264  007E72                     _main:
   265                           	opt stack 27
   266                           
   267                           ;main.c: 32: unsigned char a=0,b=1;
   268                           
   269                           ;incstack = 0
   270  007E72  6E16               	movwf	??_main& (0+255),c
   271  007E74  0E00               	movlw	0
   272  007E76  6E1F               	movwf	main@a,c
   273  007E78  5016               	movf	??_main& (0+255),w,c
   274  007E7A  6E16               	movwf	??_main& (0+255),c
   275  007E7C  0E01               	movlw	1
   276  007E7E  6E1E               	movwf	main@b,c
   277  007E80  5016               	movf	??_main& (0+255),w,c
   278                           
   279                           ;main.c: 33: unsigned char faon=0,faoff=0;
   280  007E82  6E16               	movwf	??_main& (0+255),c
   281  007E84  0E00               	movlw	0
   282  007E86  6E1A               	movwf	main@faon,c
   283  007E88  5016               	movf	??_main& (0+255),w,c
   284  007E8A  6E16               	movwf	??_main& (0+255),c
   285  007E8C  0E00               	movlw	0
   286  007E8E  6E1B               	movwf	main@faoff,c
   287  007E90  5016               	movf	??_main& (0+255),w,c
   288                           
   289                           ;main.c: 34: unsigned char fbon=0,fvel=0;
   290  007E92  6E16               	movwf	??_main& (0+255),c
   291  007E94  0E00               	movlw	0
   292  007E96  6E1C               	movwf	main@fbon,c
   293  007E98  5016               	movf	??_main& (0+255),w,c
   294  007E9A  6E16               	movwf	??_main& (0+255),c
   295  007E9C  0E00               	movlw	0
   296  007E9E  6E1D               	movwf	main@fvel,c
   297  007EA0  5016               	movf	??_main& (0+255),w,c
   298                           
   299                           ;main.c: 35: unsigned int velocidad = 100;
   300  007EA2  0E00               	movlw	0
   301  007EA4  6E19               	movwf	main@velocidad+1,c
   302  007EA6  0E64               	movlw	100
   303  007EA8  6E18               	movwf	main@velocidad,c
   304                           
   305                           ;main.c: 36: pic_ini13();
   306  007EAA  EC28  F03E         	call	_pic_ini13	;wreg free
   307                           
   308                           ;main.c: 37: timer_ini13();
   309  007EAE  ECF9  F03D         	call	_timer_ini13	;wreg free
   310                           
   311                           ;main.c: 42: INTCONbits.GIE = 1;
   312  007EB2  8EF2               	bsf	intcon,7,c	;volatile
   313                           
   314                           ;main.c: 43: (INTCONbits.GIE = 1);
   315  007EB4  8EF2               	bsf	intcon,7,c	;volatile
   316                           
   317                           ;main.c: 44: T0CONbits.TMR0ON = 1;
   318  007EB6  8ED5               	bsf	4053,7,c	;volatile
   319  007EB8                     l750:
   320                           
   321                           ;main.c: 56: Send_4Disp(a,b,3,4);
   322  007EB8  C01E  F011         	movff	main@b,Send_4Disp@Cent
   323  007EBC  6E16               	movwf	??_main& (0+255),c
   324  007EBE  0E03               	movlw	3
   325  007EC0  6E12               	movwf	Send_4Disp@Dec,c
   326  007EC2  5016               	movf	??_main& (0+255),w,c
   327  007EC4  6E17               	movwf	(??_main+1)& (0+255),c
   328  007EC6  0E04               	movlw	4
   329  007EC8  6E13               	movwf	Send_4Disp@Uni,c
   330  007ECA  5017               	movf	(??_main+1)& (0+255),w,c
   331  007ECC  501F               	movf	main@a,w,c
   332  007ECE  ECEB  F03E         	call	_Send_4Disp
   333                           
   334                           ;main.c: 62: if(!PORTDbits.RD4 && a < 9 && faon ==0 && !bot_tout){
   335  007ED2  B883               	btfsc	3971,4,c	;volatile
   336  007ED4  D011               	goto	l766
   337  007ED6  0E09               	movlw	9
   338  007ED8  5C1F               	subwf	main@a,w,c
   339  007EDA  B0D8               	btfsc	status,0,c
   340  007EDC  D00D               	goto	l766
   341  007EDE  661A               	tstfsz	main@faon,c
   342  007EE0  D00B               	goto	l766
   343  007EE2  6622               	tstfsz	_bot_tout,c
   344  007EE4  D009               	goto	l766
   345                           
   346                           ;main.c: 63: a++;
   347  007EE6  2A1F               	incf	main@a,f,c
   348                           
   349                           ;main.c: 64: faon = 1;
   350  007EE8  6E16               	movwf	??_main& (0+255),c
   351  007EEA  0E01               	movlw	1
   352  007EEC  6E1A               	movwf	main@faon,c
   353  007EEE  5016               	movf	??_main& (0+255),w,c
   354                           
   355                           ;main.c: 65: bot_tout = 100;;
   356  007EF0  6E16               	movwf	??_main& (0+255),c
   357  007EF2  0E64               	movlw	100
   358  007EF4  6E22               	movwf	_bot_tout,c
   359  007EF6  5016               	movf	??_main& (0+255),w,c
   360  007EF8                     l766:
   361                           
   362                           ;main.c: 66: }
   363                           ;main.c: 67: if(PORTDbits.RD4 && faon == 1 && !bot_tout){
   364  007EF8  A883               	btfss	3971,4,c	;volatile
   365  007EFA  D00D               	goto	l774
   366  007EFC  041A               	decf	main@faon,w,c
   367  007EFE  A4D8               	btfss	status,2,c
   368  007F00  D00A               	goto	l774
   369  007F02  6622               	tstfsz	_bot_tout,c
   370  007F04  D008               	goto	l774
   371                           
   372                           ;main.c: 68: faon=0;
   373  007F06  6E16               	movwf	??_main& (0+255),c
   374  007F08  0E00               	movlw	0
   375  007F0A  6E1A               	movwf	main@faon,c
   376  007F0C  5016               	movf	??_main& (0+255),w,c
   377                           
   378                           ;main.c: 69: bot_tout = 100;;
   379  007F0E  6E16               	movwf	??_main& (0+255),c
   380  007F10  0E64               	movlw	100
   381  007F12  6E22               	movwf	_bot_tout,c
   382  007F14  5016               	movf	??_main& (0+255),w,c
   383  007F16                     l774:
   384                           
   385                           ;main.c: 70: }
   386                           ;main.c: 71: if(!PORTDbits.RD5 && a > 0 && faoff ==0 && !bot_tout){
   387  007F16  BA83               	btfsc	3971,5,c	;volatile
   388  007F18  D010               	goto	l788
   389  007F1A  501F               	movf	main@a,w,c
   390  007F1C  B4D8               	btfsc	status,2,c
   391  007F1E  D00D               	goto	l788
   392  007F20  661B               	tstfsz	main@faoff,c
   393  007F22  D00B               	goto	l788
   394  007F24  6622               	tstfsz	_bot_tout,c
   395  007F26  D009               	goto	l788
   396                           
   397                           ;main.c: 72: a--;
   398  007F28  061F               	decf	main@a,f,c
   399                           
   400                           ;main.c: 73: faoff = 1;
   401  007F2A  6E16               	movwf	??_main& (0+255),c
   402  007F2C  0E01               	movlw	1
   403  007F2E  6E1B               	movwf	main@faoff,c
   404  007F30  5016               	movf	??_main& (0+255),w,c
   405                           
   406                           ;main.c: 74: bot_tout = 100;;
   407  007F32  6E16               	movwf	??_main& (0+255),c
   408  007F34  0E64               	movlw	100
   409  007F36  6E22               	movwf	_bot_tout,c
   410  007F38  5016               	movf	??_main& (0+255),w,c
   411  007F3A                     l788:
   412                           
   413                           ;main.c: 75: }
   414                           ;main.c: 76: if(PORTDbits.RD5 && faoff == 1 && !bot_tout){
   415  007F3A  AA83               	btfss	3971,5,c	;volatile
   416  007F3C  D00D               	goto	l796
   417  007F3E  041B               	decf	main@faoff,w,c
   418  007F40  A4D8               	btfss	status,2,c
   419  007F42  D00A               	goto	l796
   420  007F44  6622               	tstfsz	_bot_tout,c
   421  007F46  D008               	goto	l796
   422                           
   423                           ;main.c: 77: faoff=0;
   424  007F48  6E16               	movwf	??_main& (0+255),c
   425  007F4A  0E00               	movlw	0
   426  007F4C  6E1B               	movwf	main@faoff,c
   427  007F4E  5016               	movf	??_main& (0+255),w,c
   428                           
   429                           ;main.c: 78: bot_tout = 100;;
   430  007F50  6E16               	movwf	??_main& (0+255),c
   431  007F52  0E64               	movlw	100
   432  007F54  6E22               	movwf	_bot_tout,c
   433  007F56  5016               	movf	??_main& (0+255),w,c
   434  007F58                     l796:
   435                           
   436                           ;main.c: 79: }
   437                           ;main.c: 81: if(!PORTDbits.RD6 && fbon ==0 && !bot_tout){
   438  007F58  BC83               	btfsc	3971,6,c	;volatile
   439  007F5A  D010               	goto	l808
   440  007F5C  661C               	tstfsz	main@fbon,c
   441  007F5E  D00E               	goto	l808
   442  007F60  6622               	tstfsz	_bot_tout,c
   443  007F62  D00C               	goto	l808
   444                           
   445                           ;main.c: 82: b = ~b&(0x01);
   446  007F64  501E               	movf	main@b,w,c
   447  007F66  0AFF               	xorlw	255
   448  007F68  0B01               	andlw	1
   449  007F6A  6E1E               	movwf	main@b,c
   450                           
   451                           ;main.c: 83: fbon = 1;
   452  007F6C  6E16               	movwf	??_main& (0+255),c
   453  007F6E  0E01               	movlw	1
   454  007F70  6E1C               	movwf	main@fbon,c
   455  007F72  5016               	movf	??_main& (0+255),w,c
   456                           
   457                           ;main.c: 84: bot_tout = 100;;
   458  007F74  6E16               	movwf	??_main& (0+255),c
   459  007F76  0E64               	movlw	100
   460  007F78  6E22               	movwf	_bot_tout,c
   461  007F7A  5016               	movf	??_main& (0+255),w,c
   462  007F7C                     l808:
   463                           
   464                           ;main.c: 85: }
   465                           ;main.c: 86: if(PORTDbits.RD6 && fbon == 1 && !bot_tout){
   466  007F7C  AC83               	btfss	3971,6,c	;volatile
   467  007F7E  D00D               	goto	l816
   468  007F80  041C               	decf	main@fbon,w,c
   469  007F82  A4D8               	btfss	status,2,c
   470  007F84  D00A               	goto	l816
   471  007F86  6622               	tstfsz	_bot_tout,c
   472  007F88  D008               	goto	l816
   473                           
   474                           ;main.c: 88: fbon=0;
   475  007F8A  6E16               	movwf	??_main& (0+255),c
   476  007F8C  0E00               	movlw	0
   477  007F8E  6E1C               	movwf	main@fbon,c
   478  007F90  5016               	movf	??_main& (0+255),w,c
   479                           
   480                           ;main.c: 89: bot_tout = 100;;
   481  007F92  6E16               	movwf	??_main& (0+255),c
   482  007F94  0E64               	movlw	100
   483  007F96  6E22               	movwf	_bot_tout,c
   484  007F98  5016               	movf	??_main& (0+255),w,c
   485  007F9A                     l816:
   486                           
   487                           ;main.c: 90: }
   488                           ;main.c: 91: if(!PORTDbits.RD7 && fvel ==0 && !bot_tout){
   489  007F9A  BE83               	btfsc	3971,7,c	;volatile
   490  007F9C  D012               	goto	l828
   491  007F9E  661D               	tstfsz	main@fvel,c
   492  007FA0  D010               	goto	l828
   493  007FA2  6622               	tstfsz	_bot_tout,c
   494  007FA4  D00E               	goto	l828
   495                           
   496                           ;main.c: 92: velocidad = velocidad + 100;
   497  007FA6  0E64               	movlw	100
   498  007FA8  2418               	addwf	main@velocidad,w,c
   499  007FAA  6E18               	movwf	main@velocidad,c
   500  007FAC  0E00               	movlw	0
   501  007FAE  2019               	addwfc	main@velocidad+1,w,c
   502  007FB0  6E19               	movwf	main@velocidad+1,c
   503                           
   504                           ;main.c: 93: fvel = 1;
   505  007FB2  6E16               	movwf	??_main& (0+255),c
   506  007FB4  0E01               	movlw	1
   507  007FB6  6E1D               	movwf	main@fvel,c
   508  007FB8  5016               	movf	??_main& (0+255),w,c
   509                           
   510                           ;main.c: 94: bot_tout = 100;;
   511  007FBA  6E16               	movwf	??_main& (0+255),c
   512  007FBC  0E64               	movlw	100
   513  007FBE  6E22               	movwf	_bot_tout,c
   514  007FC0  5016               	movf	??_main& (0+255),w,c
   515  007FC2                     l828:
   516                           
   517                           ;main.c: 95: }
   518                           ;main.c: 96: if(PORTDbits.RD7 && fvel == 1 && !bot_tout){
   519  007FC2  AE83               	btfss	3971,7,c	;volatile
   520  007FC4  D00D               	goto	l836
   521  007FC6  041D               	decf	main@fvel,w,c
   522  007FC8  A4D8               	btfss	status,2,c
   523  007FCA  D00A               	goto	l836
   524  007FCC  6622               	tstfsz	_bot_tout,c
   525  007FCE  D008               	goto	l836
   526                           
   527                           ;main.c: 98: fvel=0;
   528  007FD0  6E16               	movwf	??_main& (0+255),c
   529  007FD2  0E00               	movlw	0
   530  007FD4  6E1D               	movwf	main@fvel,c
   531  007FD6  5016               	movf	??_main& (0+255),w,c
   532                           
   533                           ;main.c: 99: bot_tout = 100;;
   534  007FD8  6E16               	movwf	??_main& (0+255),c
   535  007FDA  0E64               	movlw	100
   536  007FDC  6E22               	movwf	_bot_tout,c
   537  007FDE  5016               	movf	??_main& (0+255),w,c
   538  007FE0                     l836:
   539                           
   540                           ;main.c: 100: }
   541                           ;main.c: 102: if(b == 0x01) leds(velocidad);
   542  007FE0  041E               	decf	main@b,w,c
   543  007FE2  A4D8               	btfss	status,2,c
   544  007FE4  D006               	goto	l840
   545  007FE6  C018  F00F         	movff	main@velocidad,leds@velocidad
   546  007FEA  C019  F010         	movff	main@velocidad+1,leds@velocidad+1
   547  007FEE  EC73  F03E         	call	_leds	;wreg free
   548  007FF2                     l840:
   549                           
   550                           ;main.c: 104: if(PORTBbits.RB4 == 0) velocidad =100;
   551  007FF2  B881               	btfsc	3969,4,c	;volatile
   552  007FF4  D761               	goto	l750
   553  007FF6  0E00               	movlw	0
   554  007FF8  6E19               	movwf	main@velocidad+1,c
   555  007FFA  0E64               	movlw	100
   556  007FFC  6E18               	movwf	main@velocidad,c
   557  007FFE  D75C               	goto	l750
   558  008000                     __end_of_main:
   559                           	opt stack 0
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           intcon	equ	0xFF2
   565                           status	equ	0xFD8
   566                           
   567 ;; *************** function _timer_ini13 *****************
   568 ;; Defined at:
   569 ;;		line 39 in file "Ap_ini.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, status,2
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   583 ;;      Params:         0       0       0       0       0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0
   586 ;;      Totals:         0       0       0       0       0       0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    2
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text1
   598  007BF2                     __ptext1:
   599                           	opt stack 0
   600  007BF2                     _timer_ini13:
   601                           	opt stack 28
   602                           
   603                           ;Ap_ini.c: 40: T0CONbits.TMR0ON = 0;
   604                           
   605                           ;incstack = 0
   606  007BF2  9ED5               	bcf	4053,7,c	;volatile
   607                           
   608                           ;Ap_ini.c: 41: T0CONbits.T08BIT = 1;
   609  007BF4  8CD5               	bsf	4053,6,c	;volatile
   610                           
   611                           ;Ap_ini.c: 42: T0CONbits.T0CS = 0;
   612  007BF6  9AD5               	bcf	4053,5,c	;volatile
   613                           
   614                           ;Ap_ini.c: 43: T0CONbits.PSA = 0;
   615  007BF8  96D5               	bcf	4053,3,c	;volatile
   616                           
   617                           ;Ap_ini.c: 44: T0CONbits.T0PS0 = 1;
   618  007BFA  80D5               	bsf	4053,0,c	;volatile
   619                           
   620                           ;Ap_ini.c: 45: T0CONbits.T0PS1 = 1;
   621  007BFC  82D5               	bsf	4053,1,c	;volatile
   622                           
   623                           ;Ap_ini.c: 46: T0CONbits.T0PS2 = 1;
   624  007BFE  84D5               	bsf	4053,2,c	;volatile
   625                           
   626                           ;Ap_ini.c: 47: TMR0L = 209;
   627  007C00  0ED1               	movlw	209
   628  007C02  6ED6               	movwf	4054,c	;volatile
   629                           
   630                           ;Ap_ini.c: 48: TMR0H = 0xFF;
   631  007C04  68D7               	setf	4055,c	;volatile
   632                           
   633                           ;Ap_ini.c: 49: INTCONbits.TMR0IE = 1;
   634  007C06  8AF2               	bsf	intcon,5,c	;volatile
   635  007C08  0012               	return	
   636  007C0A                     __end_of_timer_ini13:
   637                           	opt stack 0
   638                           tblptru	equ	0xFF8
   639                           tblptrh	equ	0xFF7
   640                           tblptrl	equ	0xFF6
   641                           tablat	equ	0xFF5
   642                           intcon	equ	0xFF2
   643                           status	equ	0xFD8
   644                           
   645 ;; *************** function _pic_ini13 *****************
   646 ;; Defined at:
   647 ;;		line 5 in file "Ap_ini.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;		None               void
   654 ;; Registers used:
   655 ;;		wreg, status,2
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   661 ;;      Params:         0       0       0       0       0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    2
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text2
   676  007C50                     __ptext2:
   677                           	opt stack 0
   678  007C50                     _pic_ini13:
   679                           	opt stack 28
   680                           
   681                           ;Ap_ini.c: 8: LATA = 0x00;
   682                           
   683                           ;incstack = 0
   684  007C50  0E00               	movlw	0
   685  007C52  6E89               	movwf	3977,c	;volatile
   686                           
   687                           ;Ap_ini.c: 9: LATB = 0x00;
   688  007C54  0E00               	movlw	0
   689  007C56  6E8A               	movwf	3978,c	;volatile
   690                           
   691                           ;Ap_ini.c: 10: LATC = 0x00;
   692  007C58  0E00               	movlw	0
   693  007C5A  6E8B               	movwf	3979,c	;volatile
   694                           
   695                           ;Ap_ini.c: 11: LATD = 0x00;
   696  007C5C  0E00               	movlw	0
   697  007C5E  6E8C               	movwf	3980,c	;volatile
   698                           
   699                           ;Ap_ini.c: 12: LATE = 0x00;
   700  007C60  0E00               	movlw	0
   701  007C62  6E8D               	movwf	3981,c	;volatile
   702                           
   703                           ;Ap_ini.c: 14: PORTA = 0x00;
   704  007C64  0E00               	movlw	0
   705  007C66  6E80               	movwf	3968,c	;volatile
   706                           
   707                           ;Ap_ini.c: 15: PORTB = 0x00;
   708  007C68  0E00               	movlw	0
   709  007C6A  6E81               	movwf	3969,c	;volatile
   710                           
   711                           ;Ap_ini.c: 16: PORTC = 0x00;
   712  007C6C  0E00               	movlw	0
   713  007C6E  6E82               	movwf	3970,c	;volatile
   714                           
   715                           ;Ap_ini.c: 17: PORTD = 0x00;
   716  007C70  0E00               	movlw	0
   717  007C72  6E83               	movwf	3971,c	;volatile
   718                           
   719                           ;Ap_ini.c: 18: PORTE = 0x00;
   720  007C74  0E00               	movlw	0
   721  007C76  6E84               	movwf	3972,c	;volatile
   722                           
   723                           ;Ap_ini.c: 22: TRISD = 0xF0;
   724  007C78  0EF0               	movlw	240
   725  007C7A  6E95               	movwf	3989,c	;volatile
   726                           
   727                           ;Ap_ini.c: 23: TRISCbits.RC6 = 0;
   728  007C7C  9C94               	bcf	3988,6,c	;volatile
   729                           
   730                           ;Ap_ini.c: 24: TRISCbits.RC7 = 0;
   731  007C7E  9E94               	bcf	3988,7,c	;volatile
   732                           
   733                           ;Ap_ini.c: 28: CMCON = 0x07;
   734  007C80  0E07               	movlw	7
   735  007C82  6EB4               	movwf	4020,c	;volatile
   736                           
   737                           ;Ap_ini.c: 29: ADCON1 = 0x0F;
   738  007C84  0E0F               	movlw	15
   739  007C86  6EC1               	movwf	4033,c	;volatile
   740                           
   741                           ;Ap_ini.c: 30: TRISA = 0xC0;
   742  007C88  0EC0               	movlw	192
   743  007C8A  6E92               	movwf	3986,c	;volatile
   744                           
   745                           ;Ap_ini.c: 31: TRISE = 0x00;
   746  007C8C  0E00               	movlw	0
   747  007C8E  6E96               	movwf	3990,c	;volatile
   748                           
   749                           ;Ap_ini.c: 35: TRISB = 0xFF;
   750  007C90  6893               	setf	3987,c	;volatile
   751  007C92  0012               	return	
   752  007C94                     __end_of_pic_ini13:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           intcon	equ	0xFF2
   759                           status	equ	0xFD8
   760                           
   761 ;; *************** function _leds *****************
   762 ;; Defined at:
   763 ;;		line 51 in file "Ap_ini.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  velocidad       2   14[COMRAM] unsigned int 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;		None               void
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   777 ;;      Params:         2       0       0       0       0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0       0       0       0       0
   780 ;;      Totals:         3       0       0       0       0       0       0       0       0
   781 ;;Total ram usage:        3 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text3
   792  007CE6                     __ptext3:
   793                           	opt stack 0
   794  007CE6                     _leds:
   795                           	opt stack 28
   796                           
   797                           ;Ap_ini.c: 52: static unsigned char i=1;
   798                           ;Ap_ini.c: 55: switch(i){
   799                           
   800                           ;incstack = 0
   801  007CE6  D02A               	goto	l920
   802  007CE8                     l892:
   803  007CE8  5021               	movf	_led_tout+1,w,c
   804  007CEA  1020               	iorwf	_led_tout,w,c
   805  007CEC  A4D8               	btfss	status,2,c
   806  007CEE  D034               	goto	l128
   807                           
   808                           ;Ap_ini.c: 57: LATDbits.LD2=~LATDbits.LD2;
   809  007CF0  748C               	btg	3980,2,c	;volatile
   810  007CF2  D00B               	goto	L2
   811  007CF4                     l898:
   812  007CF4  5021               	movf	_led_tout+1,w,c
   813  007CF6  1020               	iorwf	_led_tout,w,c
   814  007CF8  A4D8               	btfss	status,2,c
   815  007CFA  D02E               	goto	l128
   816                           
   817                           ;Ap_ini.c: 63: LATDbits.LD3=~LATDbits.LD3;
   818  007CFC  768C               	btg	3980,3,c	;volatile
   819  007CFE  D005               	goto	L2
   820  007D00                     l904:
   821  007D00  5021               	movf	_led_tout+1,w,c
   822  007D02  1020               	iorwf	_led_tout,w,c
   823  007D04  A4D8               	btfss	status,2,c
   824  007D06  D028               	goto	l128
   825                           
   826                           ;Ap_ini.c: 69: LATCbits.LC6=~LATCbits.LC6;
   827  007D08  7C8B               	btg	3979,6,c	;volatile
   828  007D0A                     L2:
   829                           
   830                           ;Ap_ini.c: 70: led_tout = velocidad;
   831  007D0A  C00F  F020         	movff	leds@velocidad,_led_tout
   832  007D0E  C010  F021         	movff	leds@velocidad+1,_led_tout+1
   833                           
   834                           ;Ap_ini.c: 71: i++;
   835  007D12  2A25               	incf	leds@i,f,c
   836  007D14  D021               	goto	l128
   837  007D16                     l910:
   838  007D16  5021               	movf	_led_tout+1,w,c
   839  007D18  1020               	iorwf	_led_tout,w,c
   840  007D1A  A4D8               	btfss	status,2,c
   841  007D1C  D01D               	goto	l128
   842                           
   843                           ;Ap_ini.c: 75: LATCbits.LC7=~LATCbits.LC7;
   844  007D1E  7E8B               	btg	3979,7,c	;volatile
   845                           
   846                           ;Ap_ini.c: 76: led_tout = velocidad;
   847  007D20  C00F  F020         	movff	leds@velocidad,_led_tout
   848  007D24  C010  F021         	movff	leds@velocidad+1,_led_tout+1
   849  007D28  D004               	goto	L3
   850  007D2A                     l916:
   851                           
   852                           ;Ap_ini.c: 81: led_tout = 1000;
   853  007D2A  0E03               	movlw	3
   854  007D2C  6E21               	movwf	_led_tout+1,c
   855  007D2E  0EE8               	movlw	232
   856  007D30  6E20               	movwf	_led_tout,c
   857  007D32                     L3:
   858                           
   859                           ;Ap_ini.c: 82: i=1;
   860  007D32  6E11               	movwf	??_leds& (0+255),c
   861  007D34  0E01               	movlw	1
   862  007D36  6E25               	movwf	leds@i,c
   863  007D38  5011               	movf	??_leds& (0+255),w,c
   864                           
   865                           ;Ap_ini.c: 83: }
   866                           ;Ap_ini.c: 85: }
   867  007D3A  D00E               	goto	l128
   868  007D3C                     l920:
   869  007D3C  5025               	movf	leds@i,w,c
   870                           
   871                           ; Switch size 1, requested type "space"
   872                           ; Number of cases is 4, Range of values is 1 to 4
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte           13     7 (average)
   876                           ;	Chosen strategy is simple_byte
   877  007D3E  0A01               	xorlw	1	; case 1
   878  007D40  B4D8               	btfsc	status,2,c
   879  007D42  D7D2               	goto	l892
   880  007D44  0A03               	xorlw	3	; case 2
   881  007D46  B4D8               	btfsc	status,2,c
   882  007D48  D7D5               	goto	l898
   883  007D4A  0A01               	xorlw	1	; case 3
   884  007D4C  B4D8               	btfsc	status,2,c
   885  007D4E  D7D8               	goto	l904
   886  007D50  0A07               	xorlw	7	; case 4
   887  007D52  B4D8               	btfsc	status,2,c
   888  007D54  D7E0               	goto	l910
   889  007D56  D7E9               	goto	l916
   890  007D58                     l128:
   891  007D58  0012               	return	
   892  007D5A                     __end_of_leds:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           intcon	equ	0xFF2
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _Send_4Disp *****************
   902 ;; Defined at:
   903 ;;		line 119 in file "Ap_ini.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  Umil            1    wreg     unsigned char 
   906 ;;  Cent            1   16[COMRAM] unsigned char 
   907 ;;  Dec             1   17[COMRAM] unsigned char 
   908 ;;  Uni             1   18[COMRAM] unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  Umil            1   20[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         3       0       0       0       0       0       0       0       0
   921 ;;      Locals:         1       0       0       0       0       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0       0       0       0       0
   923 ;;      Totals:         5       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        5 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    3
   927 ;; This function calls:
   928 ;;		_Send_Disp
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text4
   935  007DD6                     __ptext4:
   936                           	opt stack 0
   937  007DD6                     _Send_4Disp:
   938                           	opt stack 27
   939                           
   940                           ;incstack = 0
   941                           ;Send_4Disp@Umil stored from wreg
   942  007DD6  CFE8 F015          	movff	wreg,Send_4Disp@Umil
   943                           
   944                           ;Ap_ini.c: 121: static unsigned char Nro_Disp=1;
   945                           ;Ap_ini.c: 123: switch(Nro_Disp){
   946  007DDA  D03C               	goto	l888
   947  007DDC                     l144:
   948                           
   949                           ;Ap_ini.c: 125: if(!mux_tout){
   950  007DDC  6623               	tstfsz	_mux_tout,c
   951  007DDE  D048               	goto	l154
   952                           
   953                           ;Ap_ini.c: 126: Send_Disp(1,Umil);
   954  007DE0  C015  F00F         	movff	Send_4Disp@Umil,Send_Disp@Dato
   955  007DE4  0E01               	movlw	1
   956  007DE6  EC4A  F03E         	call	_Send_Disp
   957                           
   958                           ;Ap_ini.c: 127: mux_tout = 4;;
   959  007DEA  6E14               	movwf	??_Send_4Disp& (0+255),c
   960  007DEC  0E04               	movlw	4
   961  007DEE  6E23               	movwf	_mux_tout,c
   962  007DF0  5014               	movf	??_Send_4Disp& (0+255),w,c
   963                           
   964                           ;Ap_ini.c: 128: Nro_Disp = 2;
   965  007DF2  6E14               	movwf	??_Send_4Disp& (0+255),c
   966  007DF4  0E02               	movlw	2
   967  007DF6  D024               	goto	L6
   968  007DF8                     l147:
   969                           
   970                           ;Ap_ini.c: 133: if(!mux_tout){
   971  007DF8  6623               	tstfsz	_mux_tout,c
   972  007DFA  D03A               	goto	l154
   973                           
   974                           ;Ap_ini.c: 134: Send_Disp(2,Cent);
   975  007DFC  C011  F00F         	movff	Send_4Disp@Cent,Send_Disp@Dato
   976  007E00  0E02               	movlw	2
   977  007E02  EC4A  F03E         	call	_Send_Disp
   978                           
   979                           ;Ap_ini.c: 135: mux_tout = 4;;
   980  007E06  6E14               	movwf	??_Send_4Disp& (0+255),c
   981  007E08  0E04               	movlw	4
   982  007E0A  6E23               	movwf	_mux_tout,c
   983  007E0C  5014               	movf	??_Send_4Disp& (0+255),w,c
   984                           
   985                           ;Ap_ini.c: 136: Nro_Disp = 3;
   986  007E0E  6E14               	movwf	??_Send_4Disp& (0+255),c
   987  007E10  0E03               	movlw	3
   988  007E12  D016               	goto	L6
   989  007E14                     l149:
   990                           
   991                           ;Ap_ini.c: 141: if(!mux_tout){
   992  007E14  6623               	tstfsz	_mux_tout,c
   993  007E16  D02C               	goto	l154
   994                           
   995                           ;Ap_ini.c: 142: Send_Disp(3,Dec);
   996  007E18  C012  F00F         	movff	Send_4Disp@Dec,Send_Disp@Dato
   997  007E1C  0E03               	movlw	3
   998  007E1E  EC4A  F03E         	call	_Send_Disp
   999                           
  1000                           ;Ap_ini.c: 143: mux_tout = 4;;
  1001  007E22  6E14               	movwf	??_Send_4Disp& (0+255),c
  1002  007E24  0E04               	movlw	4
  1003  007E26  6E23               	movwf	_mux_tout,c
  1004  007E28  5014               	movf	??_Send_4Disp& (0+255),w,c
  1005                           
  1006                           ;Ap_ini.c: 144: Nro_Disp = 4;
  1007  007E2A  6E14               	movwf	??_Send_4Disp& (0+255),c
  1008  007E2C  0E04               	movlw	4
  1009  007E2E  D008               	goto	L6
  1010  007E30                     l151:
  1011                           
  1012                           ;Ap_ini.c: 149: if(!mux_tout){
  1013  007E30  6623               	tstfsz	_mux_tout,c
  1014  007E32  D01E               	goto	l154
  1015                           
  1016                           ;Ap_ini.c: 150: Send_Disp(4,Uni);
  1017  007E34  C013  F00F         	movff	Send_4Disp@Uni,Send_Disp@Dato
  1018  007E38  0E04               	movlw	4
  1019  007E3A  EC4A  F03E         	call	_Send_Disp
  1020  007E3E  D003               	goto	l886
  1021  007E40                     L6:
  1022  007E40  6E24               	movwf	Send_4Disp@Nro_Disp,c
  1023  007E42  5014               	movf	??_Send_4Disp& (0+255),w,c
  1024  007E44  D015               	goto	l154
  1025  007E46                     l886:
  1026                           
  1027                           ;Ap_ini.c: 157: mux_tout = 4;;
  1028  007E46  6E14               	movwf	??_Send_4Disp& (0+255),c
  1029  007E48  0E04               	movlw	4
  1030  007E4A  6E23               	movwf	_mux_tout,c
  1031  007E4C  5014               	movf	??_Send_4Disp& (0+255),w,c
  1032                           
  1033                           ;Ap_ini.c: 158: Nro_Disp = 1;
  1034  007E4E  6E14               	movwf	??_Send_4Disp& (0+255),c
  1035  007E50  0E01               	movlw	1
  1036  007E52  D7F6               	goto	L6
  1037  007E54                     l888:
  1038  007E54  5024               	movf	Send_4Disp@Nro_Disp,w,c
  1039                           
  1040                           ; Switch size 1, requested type "space"
  1041                           ; Number of cases is 4, Range of values is 1 to 4
  1042                           ; switch strategies available:
  1043                           ; Name         Instructions Cycles
  1044                           ; simple_byte           13     7 (average)
  1045                           ;	Chosen strategy is simple_byte
  1046  007E56  0A01               	xorlw	1	; case 1
  1047  007E58  B4D8               	btfsc	status,2,c
  1048  007E5A  D7C0               	goto	l144
  1049  007E5C  0A03               	xorlw	3	; case 2
  1050  007E5E  B4D8               	btfsc	status,2,c
  1051  007E60  D7CB               	goto	l147
  1052  007E62  0A01               	xorlw	1	; case 3
  1053  007E64  B4D8               	btfsc	status,2,c
  1054  007E66  D7D6               	goto	l149
  1055  007E68  0A07               	xorlw	7	; case 4
  1056  007E6A  B4D8               	btfsc	status,2,c
  1057  007E6C  D7E1               	goto	l151
  1058  007E6E  D7EB               	goto	l886
  1059  007E70                     l154:
  1060  007E70  0012               	return	
  1061  007E72                     __end_of_Send_4Disp:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           intcon	equ	0xFF2
  1068                           wreg	equ	0xFE8
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _Send_Disp *****************
  1072 ;; Defined at:
  1073 ;;		line 88 in file "Ap_ini.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  NroDisp         1    wreg     unsigned char 
  1076 ;;  Dato            1   14[COMRAM] unsigned char 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  NroDisp         1   15[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;		None               void
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         1       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_Send_4Disp
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text5
  1103  007C94                     __ptext5:
  1104                           	opt stack 0
  1105  007C94                     _Send_Disp:
  1106                           	opt stack 27
  1107                           
  1108                           ;incstack = 0
  1109                           ;Send_Disp@NroDisp stored from wreg
  1110  007C94  CFE8 F010          	movff	wreg,Send_Disp@NroDisp
  1111                           
  1112                           ;Ap_ini.c: 90: LATA = 0;
  1113  007C98  0E00               	movlw	0
  1114  007C9A  6E89               	movwf	3977,c	;volatile
  1115                           
  1116                           ;Ap_ini.c: 92: LATAbits.LA4 = 0;
  1117  007C9C  9889               	bcf	3977,4,c	;volatile
  1118                           
  1119                           ;Ap_ini.c: 93: LATAbits.LA5 = 0;
  1120  007C9E  9A89               	bcf	3977,5,c	;volatile
  1121                           
  1122                           ;Ap_ini.c: 94: LATEbits.LATE0 = 0;
  1123  007CA0  908D               	bcf	3981,0,c	;volatile
  1124                           
  1125                           ;Ap_ini.c: 95: LATEbits.LATE1 = 0;
  1126  007CA2  928D               	bcf	3981,1,c	;volatile
  1127                           
  1128                           ;Ap_ini.c: 97: switch(NroDisp){
  1129  007CA4  D008               	goto	l946
  1130  007CA6                     l134:
  1131                           
  1132                           ;Ap_ini.c: 102: LATAbits.LA5 = 1;
  1133  007CA6  8A89               	bsf	3977,5,c	;volatile
  1134                           
  1135                           ;Ap_ini.c: 103: }break;
  1136  007CA8  D014               	goto	l948
  1137  007CAA                     l135:
  1138                           
  1139                           ;Ap_ini.c: 105: LATEbits.LATE0 = 1;
  1140  007CAA  808D               	bsf	3981,0,c	;volatile
  1141                           
  1142                           ;Ap_ini.c: 106: }break;
  1143  007CAC  D012               	goto	l948
  1144  007CAE                     l136:
  1145                           
  1146                           ;Ap_ini.c: 108: LATEbits.LATE1 = 1;
  1147  007CAE  828D               	bsf	3981,1,c	;volatile
  1148                           
  1149                           ;Ap_ini.c: 109: }break;
  1150  007CB0  D010               	goto	l948
  1151  007CB2                     l137:
  1152                           
  1153                           ;Ap_ini.c: 111: LATAbits.LA4 = 1;
  1154  007CB2  8889               	bsf	3977,4,c	;volatile
  1155                           
  1156                           ;Ap_ini.c: 112: }break;
  1157  007CB4  D00E               	goto	l948
  1158  007CB6                     l946:
  1159  007CB6  5010               	movf	Send_Disp@NroDisp,w,c
  1160                           
  1161                           ; Switch size 1, requested type "space"
  1162                           ; Number of cases is 4, Range of values is 1 to 4
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte           13     7 (average)
  1166                           ;	Chosen strategy is simple_byte
  1167  007CB8  0A01               	xorlw	1	; case 1
  1168  007CBA  B4D8               	btfsc	status,2,c
  1169  007CBC  D7FA               	goto	l137
  1170  007CBE  0A03               	xorlw	3	; case 2
  1171  007CC0  B4D8               	btfsc	status,2,c
  1172  007CC2  D7F1               	goto	l134
  1173  007CC4  0A01               	xorlw	1	; case 3
  1174  007CC6  B4D8               	btfsc	status,2,c
  1175  007CC8  D7F0               	goto	l135
  1176  007CCA  0A07               	xorlw	7	; case 4
  1177  007CCC  B4D8               	btfsc	status,2,c
  1178  007CCE  D7EF               	goto	l136
  1179  007CD0  D7F0               	goto	l137
  1180  007CD2                     l948:
  1181                           
  1182                           ;Ap_ini.c: 114: Dato = Dato & 0x0F;
  1183  007CD2  500F               	movf	Send_Disp@Dato,w,c
  1184  007CD4  0B0F               	andlw	15
  1185  007CD6  6E0F               	movwf	Send_Disp@Dato,c
  1186                           
  1187                           ;Ap_ini.c: 115: LATA = LATA & 0xF0;
  1188  007CD8  5089               	movf	3977,w,c	;volatile
  1189  007CDA  0BF0               	andlw	240
  1190  007CDC  6E89               	movwf	3977,c	;volatile
  1191                           
  1192                           ;Ap_ini.c: 116: LATA = LATA | Dato;
  1193  007CDE  5089               	movf	3977,w,c	;volatile
  1194  007CE0  100F               	iorwf	Send_Disp@Dato,w,c
  1195  007CE2  6E89               	movwf	3977,c	;volatile
  1196  007CE4  0012               	return	
  1197  007CE6                     __end_of_Send_Disp:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           intcon	equ	0xFF2
  1204                           wreg	equ	0xFE8
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _myISR *****************
  1208 ;; Defined at:
  1209 ;;		line 112 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;		None               void
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1223 ;;      Params:         0       0       0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1225 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1226 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1227 ;;Total ram usage:       14 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    1
  1230 ;; This function calls:
  1231 ;;		_tic_timer0
  1232 ;; This function is called by:
  1233 ;;		Interrupt level 2
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	intcode
  1238  002008                     __pintcode:
  1239                           	opt stack 0
  1240  002008                     _myISR:
  1241                           	opt stack 27
  1242                           
  1243                           ;incstack = 0
  1244  002008  CFFA F001          	movff	pclath,??_myISR
  1245  00200C  CFFB F002          	movff	pclatu,??_myISR+1
  1246  002010  EDAD  F03E         	call	int_func,f	;refresh shadow registers
  1247                           pclatu	equ	0xFFB
  1248                           pclath	equ	0xFFA
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           intcon	equ	0xFF2
  1254                           wreg	equ	0xFE8
  1255                           status	equ	0xFD8
  1256                           
  1257                           	psect	intcode_body
  1258  007D5A                     __pintcode_body:
  1259                           	opt stack 27
  1260  007D5A                     int_func:
  1261                           	opt stack 27
  1262  007D5A  0006               	pop		; remove dummy address from shadow register refresh
  1263  007D5C  CFE9 F003          	movff	fsr0l,??_myISR+2
  1264  007D60  CFEA F004          	movff	fsr0h,??_myISR+3
  1265  007D64  CFE1 F005          	movff	fsr1l,??_myISR+4
  1266  007D68  CFE2 F006          	movff	fsr1h,??_myISR+5
  1267  007D6C  CFD9 F007          	movff	fsr2l,??_myISR+6
  1268  007D70  CFDA F008          	movff	fsr2h,??_myISR+7
  1269  007D74  CFF3 F009          	movff	prodl,??_myISR+8
  1270  007D78  CFF4 F00A          	movff	prodh,??_myISR+9
  1271  007D7C  CFF6 F00B          	movff	tblptrl,??_myISR+10
  1272  007D80  CFF7 F00C          	movff	tblptrh,??_myISR+11
  1273  007D84  CFF8 F00D          	movff	tblptru,??_myISR+12
  1274  007D88  CFF5 F00E          	movff	tablat,??_myISR+13
  1275                           
  1276                           ;main.c: 120: if(TMR0IF){
  1277  007D8C  A4F2               	btfss	intcon,2,c	;volatile
  1278  007D8E  D006               	goto	i2l50
  1279                           
  1280                           ;main.c: 121: INTCONbits.TMR0IF = 0;
  1281  007D90  94F2               	bcf	intcon,2,c	;volatile
  1282                           
  1283                           ;main.c: 122: TMR0L = 209;
  1284  007D92  0ED1               	movlw	209
  1285  007D94  6ED6               	movwf	4054,c	;volatile
  1286                           
  1287                           ;main.c: 123: TMR0H = 0xFF;
  1288  007D96  68D7               	setf	4055,c	;volatile
  1289                           
  1290                           ;main.c: 124: tic_timer0();
  1291  007D98  EC05  F03E         	call	_tic_timer0	;wreg free
  1292  007D9C                     i2l50:
  1293  007D9C  C00E  FFF5         	movff	??_myISR+13,tablat
  1294  007DA0  C00D  FFF8         	movff	??_myISR+12,tblptru
  1295  007DA4  C00C  FFF7         	movff	??_myISR+11,tblptrh
  1296  007DA8  C00B  FFF6         	movff	??_myISR+10,tblptrl
  1297  007DAC  C00A  FFF4         	movff	??_myISR+9,prodh
  1298  007DB0  C009  FFF3         	movff	??_myISR+8,prodl
  1299  007DB4  C008  FFDA         	movff	??_myISR+7,fsr2h
  1300  007DB8  C007  FFD9         	movff	??_myISR+6,fsr2l
  1301  007DBC  C006  FFE2         	movff	??_myISR+5,fsr1h
  1302  007DC0  C005  FFE1         	movff	??_myISR+4,fsr1l
  1303  007DC4  C004  FFEA         	movff	??_myISR+3,fsr0h
  1304  007DC8  C003  FFE9         	movff	??_myISR+2,fsr0l
  1305  007DCC  C002  FFFB         	movff	??_myISR+1,pclatu
  1306  007DD0  C001  FFFA         	movff	??_myISR,pclath
  1307  007DD4  0011               	retfie		f
  1308  007DD6                     __end_of_myISR:
  1309                           	opt stack 0
  1310                           pclatu	equ	0xFFB
  1311                           pclath	equ	0xFFA
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           prodh	equ	0xFF4
  1317                           prodl	equ	0xFF3
  1318                           intcon	equ	0xFF2
  1319                           fsr0h	equ	0xFEA
  1320                           fsr0l	equ	0xFE9
  1321                           wreg	equ	0xFE8
  1322                           fsr1h	equ	0xFE2
  1323                           fsr1l	equ	0xFE1
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _tic_timer0 *****************
  1329 ;; Defined at:
  1330 ;;		line 162 in file "Ap_ini.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_myISR
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text7
  1358  007C0A                     __ptext7:
  1359                           	opt stack 0
  1360  007C0A                     _tic_timer0:
  1361                           	opt stack 27
  1362                           
  1363                           ;Ap_ini.c: 163: if(mux_tout)mux_tout--;
  1364                           
  1365                           ;incstack = 0
  1366  007C0A  5023               	movf	_mux_tout,w,c
  1367  007C0C  A4D8               	btfss	status,2,c
  1368  007C0E  0623               	decf	_mux_tout,f,c
  1369                           
  1370                           ;Ap_ini.c: 164: if(bot_tout)bot_tout--;
  1371  007C10  5022               	movf	_bot_tout,w,c
  1372  007C12  A4D8               	btfss	status,2,c
  1373  007C14  0622               	decf	_bot_tout,f,c
  1374                           
  1375                           ;Ap_ini.c: 165: if(led_tout)led_tout--;
  1376  007C16  5021               	movf	_led_tout+1,w,c
  1377  007C18  1020               	iorwf	_led_tout,w,c
  1378  007C1A  B4D8               	btfsc	status,2,c
  1379  007C1C  D003               	goto	i2l160
  1380  007C1E  0620               	decf	_led_tout,f,c
  1381  007C20  A0D8               	btfss	status,0,c
  1382  007C22  0621               	decf	_led_tout+1,f,c
  1383  007C24                     i2l160:
  1384  007C24  0012               	return	
  1385  007C26                     __end_of_tic_timer0:
  1386                           	opt stack 0
  1387  0000                     pclatu	equ	0xFFB
  1388                           pclath	equ	0xFFA
  1389                           tblptru	equ	0xFF8
  1390                           tblptrh	equ	0xFF7
  1391                           tblptrl	equ	0xFF6
  1392                           tablat	equ	0xFF5
  1393                           prodh	equ	0xFF4
  1394                           prodl	equ	0xFF3
  1395                           intcon	equ	0xFF2
  1396                           fsr0h	equ	0xFEA
  1397                           fsr0l	equ	0xFE9
  1398                           wreg	equ	0xFE8
  1399                           fsr1h	equ	0xFE2
  1400                           fsr1l	equ	0xFE1
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           pclatu	equ	0xFFB
  1405                           pclath	equ	0xFFA
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           intcon	equ	0xFF2
  1413                           fsr0h	equ	0xFEA
  1414                           fsr0l	equ	0xFE9
  1415                           wreg	equ	0xFE8
  1416                           fsr1h	equ	0xFE2
  1417                           fsr1l	equ	0xFE1
  1418                           fsr2h	equ	0xFDA
  1419                           fsr2l	equ	0xFD9
  1420                           status	equ	0xFD8
  1421                           
  1422                           	psect	rparam
  1423  0000                     pclatu	equ	0xFFB
  1424                           pclath	equ	0xFFA
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           prodh	equ	0xFF4
  1430                           prodl	equ	0xFF3
  1431                           intcon	equ	0xFF2
  1432                           fsr0h	equ	0xFEA
  1433                           fsr0l	equ	0xFE9
  1434                           wreg	equ	0xFE8
  1435                           fsr1h	equ	0xFE2
  1436                           fsr1l	equ	0xFE1
  1437                           fsr2h	equ	0xFDA
  1438                           fsr2l	equ	0xFD9
  1439                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Send_4Disp
    _Send_4Disp->_Send_Disp

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     677
                                             21 COMRAM    10    10      0
                         _Send_4Disp
                               _leds
                          _pic_ini13
                        _timer_ini13
 ---------------------------------------------------------------------------------
 (1) _timer_ini13                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_ini13                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leds                                                 3     1      2      94
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Send_4Disp                                           5     2      3     343
                                             16 COMRAM     5     2      3
                          _Send_Disp
 ---------------------------------------------------------------------------------
 (2) _Send_Disp                                            2     1      1     181
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myISR                                               14    14      0       0
                                              0 COMRAM    14    14      0
                         _tic_timer0
 ---------------------------------------------------------------------------------
 (4) _tic_timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_4Disp
     _Send_Disp
   _leds
   _pic_ini13
   _timer_ini13

 _myISR (ROOT)
   _tic_timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      25       1       38.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      20        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu May 22 20:57:02 2014

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000                      l134 7CA6                      l135 7CAA  
                    l151 7E30                      l136 7CAE                      l144 7DDC  
                    l128 7D58                      l137 7CB2                      l154 7E70  
                    l147 7DF8                      l149 7E14                      l910 7D16  
                    l750 7EB8                      l904 7D00                      l920 7D3C  
                    l840 7FF2                      l816 7F9A                      l808 7F7C  
                    l916 7D2A                      l836 7FE0                      l828 7FC2  
                    l774 7F16                      l766 7EF8                      l946 7CB6  
                    l948 7CD2                      l892 7CE8                      l796 7F58  
                    l788 7F3A                      l886 7E46                      l888 7E54  
                    l898 7CF4             __CFG_CPB$OFF 000000                      wreg 000FE8  
          Send_Disp@Dato 000F             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     i2l50 7D9C  
                   _main 7E72                     _leds 7CE6                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 2014  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000            __CFG_PLLDIV$5 000000  
                  ?_main 0001                    ?_leds 000F                    _CMCON 000FB4  
                  i2l160 7C24                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _myISR 2008                    main@a 001F  
                  main@b 001E                    leds@i 0025                    tablat 000FF5  
                  status 000FD8          __initialization 7C26             __end_of_main 8000  
           __end_of_leds 7D5A                   ??_main 0016                   ??_leds 0011  
          __activetblptr 000002               _Send_4Disp 7DD6                   _ADCON1 000FC1  
                 ?_myISR 0001                   _TMR0IF 007F92           __CFG_VREGEN$ON 000000  
         __CFG_XINST$OFF 000000       __size_of_Send_Disp 0052           __CFG_STVREN$ON 000000  
          main@velocidad 0018             __pdataCOMRAM 0024                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ?_timer_ini13 0001  
             __accesstop 0060  __end_of__initialization 7C46          __CFG_PBADEN$OFF 000000  
       Send_Disp@NroDisp 0010           __pcstackCOMRAM 0001            __end_of_myISR 7DD6  
          leds@velocidad 000F              ?_Send_4Disp 0011                  ??_myISR 0001  
      __end_of_Send_Disp 7CE6       __size_of_pic_ini13 0044       Send_4Disp@Nro_Disp 0024  
                __Hparam 0000                  __Lparam 0000      __size_of_Send_4Disp 009C  
                __pcinit 7C26                  __ramtop 0800                  __ptext0 7E72  
                __ptext1 7BF2                  __ptext2 7C50                  __ptext3 7CE6  
                __ptext4 7DD6                  __ptext5 7C94                  __ptext7 7C0A  
              _T0CONbits 000FD5        __end_of_pic_ini13 7C94           __pintcode_body 7D5A  
   __size_of_timer_ini13 0018     end_of_initialization 7C46            __Lmediumconst 0000  
                int_func 7D5A               _tic_timer0 7C0A                _PORTBbits 000F81  
              _PORTDbits 000F83                _TRISCbits 000F94            __pidataCOMRAM 2004  
           ??_Send_4Disp 0014      start_initialization 7C26                _Send_Disp 7C94  
            ?_tic_timer0 0001       __end_of_Send_4Disp 7E72         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0020               ?_Send_Disp 000F                __pintcode 2008  
    __size_of_tic_timer0 001C           __size_of_myISR 5DCE                _pic_ini13 7C50  
               _LATAbits 000F89                 _LATCbits 000F8B                 _LATDbits 000F8C  
               _LATEbits 000F8D         __CFG_WDTPS$32768 000000                main@faoff 001B  
          ??_timer_ini13 000F           Send_4Disp@Cent 0011           Send_4Disp@Umil 0015  
             ?_pic_ini13 0001              ??_Send_Disp 0010                 __Hrparam 0000  
               __Lrparam 0000                 _bot_tout 0022                 _led_tout 0020  
    __end_of_timer_ini13 7C0A            __size_of_main 018E            __size_of_leds 0074  
           ??_tic_timer0 0001                 _mux_tout 0023                 main@faon 001A  
               main@fbon 001C                 main@fvel 001D            Send_4Disp@Dec 0012  
          Send_4Disp@Uni 0013    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
     __end_of_tic_timer0 7C26              ??_pic_ini13 000F                 intlevel2 0000  
            _timer_ini13 7BF2       __CFG_FOSC$HSPLL_HS 000000  
